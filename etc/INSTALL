GAP 4 Beta 3
------------

This    file      (ftp://ftp-gap.dcs.st-and.ac.uk/pub/gap/gap4beta/INSTALL)
contains installation  instructions for the beta releases of GAP 4,
called GAP 4.beta for short.

The current beta release is Beta 3 of XXX-Feb-98.

At the moment we only support GAP 4.beta under UNIX, it has been tested on
the following systems:

  DECalpha under OSF 3.2 with GNU cc 2, DECstation under Ultrix with cc,
  HP9000 under HP-UX with GNU cc 2, IBM PC under FreeBSD 2.x with GNU cc 2,
  IBM PC under Linux with GNU cc 2, IBM PC under NeXTSTEP 3.x with GNU cc 2,
  IBM RS/6000 & AIX with GNU cc 2, SGI Mips under IRIX 5/6 with cc,
  Sun Sparc under SunOS with GCC 2, Sun Sparc under Solaris with GCC 2

You  will need a  Pentium   class i386 with  at   least 16 Mbyte  to work
comfortable with  GAP 4.beta, a 486 is  not recommended although GAP 4.beta
compiles on such systems.

Porting GAP to  another unix system is not  hard, however.  You need some
very basic understanding  of C and UNIX,  see "If the configuration fails".
If you plan to port GAP to a non-UNIX system please contact

    gap-trouble@dcs.st-and.ac.uk


How to get GAP 4.beta
--------------------

GAP 4.beta  is available via  ftp, please  see the GAP web page
http://www-gap.dcs.st-and.ac.uk/~gap
for details about the status and copyright of GAP.

You can get GAP 4.beta from:

    ftp://ftp-gap.dcs.st-and.ac.uk/pub/gap/gap4beta/
    ftp://ftp.math.rwth-aachen.de/pub/gap4beta/

These directories contain the following files:

    INSTALL		this file
    gap4bY.tar.gz	the source code as gzipped tar archive
    doc4bY.tar.gz       the documentation as gzipped tar archive
    fix1.tar.gz         corrections, additions for the files above
    ...

Where Y is the number of the beta release.

You  need  all the above  files, however,  at the  time this document was
written no ``fixX.tar.gz'' existed.

The directory also contains a file

    tbl4bY.tar.gz       character tables and tables of marks

You do not need this file, but if you don't load it you won't have the
libraries of character tables and tables of marks. (The character tables
take about 10MB, the tables of marks take up some 70MB of disk space).

Installation of GAP 4.beta under UNIX
------------------------------------

Installing GAP 4.beta on any of the machines mentioned at the beginning of
this file is fairly  easy.  Get the files described   in "How to  get GAP
4.beta" and decide into which directory you want to install GAP 4.beta.  If
you will be the only user using GAP 4.beta, you probably should install it
in your home directory. If other users will be also using  GAP 4.beta, you
should install  it in a public  place, such as  ``/usr/local/lib/''.  GAP
4.beta will be installed in a subdirectory ``gap4beta'' of this directory.
You can later  move GAP 4.beta to a  different location.  For example  you
can first install it  in your home directory and when it works move it to
``/usr/local/lib/''.

The following  installation example assumes  that  you are installing GAP
4.beta into the   directory ``/usr/local/lib'' on  a  Pentium  Pro running
Linux.

In the following text, Y in filenames always stands for the version number
of the beta release. So you should read for example 'gap4bY.tar.gz' as
 'gap4b3.tar.gz' or whatever the current version you got is.

Copy or ftp the  files described in "How  to get GAP 4.beta" into this
directory.  Unpack the files ``gap4bY.tar.gz'', ``doc4bY.tar.gz'' 
into the directory using `gunzip' and `tar'. Then go to the gap4bY directory
created and unpack any ``fixX.tar.gz'' If there is more  than    one   fix 
file,    first  unpack   ``fix1.tar.gz'',  then ``fix2.tar.gz'', an so on.

Let us assume that there are no  ``fixX.tar.gz'' files, if there were any
they must be unpacked *after* ``gap4bY.tar.gz'' and ``doc4bY.tar.gz''.

    you@unix> gunzip gap4bY.tar.gz doc4bY.tar.gz
    you@unix> tar xvf gap4bY.tar
    ...
    you@unix> tar xvf doc4bY.tar.gz
    ...

If you want to install the character tables and tables of marks:
    you@unix> tar xvf tbl4bY.tar.gz
    ...

Change in the directory gap4bY.

    you@unix> cd gap4bY

The directories 'tbl', 'tom', 'trans', 'small' and 'prim' contain data
libraries. If you are short of disk space you can erase some of them,
but then of course you will not be able to access this data.

Under UNIX, we now use the 'autoconfig' method to take care of system
dependencies. (See below if this is not working on your machine.)

If you are installing GAP on various systems that share a file system and if
you have installed GAP already on another machine remove the files
`config.cache' and `config.status'. Run the shell script `configure'.

    you@unix> ./configure
    checking host system type... i686-unknown-linux2.0.27

This will automatially detect the machine and compiler target. The make
process will automatically create an appropriate binary subdirectory.
It also creates a `Makefile' that can
be used to compile GAP. Simply call

   you@unix> make

You will get various lines of further configuration messages and the the
compilation process will start.

The compilation  process creates the object  files and the  executable in
the directory ``/usr/local/lib/gap4beta/bin/<target>/'', where <target> is
the name printed by the first `configure'.  In our  example the executable
will be created as
``/usr/local/lib/gap4beta/bin/i686-unknown-linux2.0.27/gap''

The automatic configuration should work on any UNIX system. If it does not,
please inform us at `gap-trouble@dcs.st-and.ac.uk'.

In order   to    test  your   compilation    `cd'  into   the   directory
``/usr/local/lib/gap4beta/'' and execute the newly created executable.

    you@unix> cd ..
    you@unix> bin/i686-unknown-linux2.0.27/gap
    BETA BETA BETA BETA BETA BETA BETA BETA BETA BETA BETA BETA BETA BETA

    This is a  BETA version  of GAP 4.
[... lines deleted]

    gap>

Try a few things to see if the compilation succeeded.

    gap> Factors( 2^100-1 );  
    [ 3, 5, 5, 5, 11, 31, 41, 101, 251, 601, 1801, 4051, 8101, 268501 ]
    gap> Size( SymmetricGroup( 10 ) );
    3628800
    gap> quit;

Now    edit     the    shell         script   ``gap.sh''       in     the
``/usr/local/lib/gap4beta/bin'' directory according to the   instructions
in  this file.  After editing try to execute the script

    you@unix> bin/gap.sh

If the  shell complains that  it cannot execute  or find ``gap.sh'' check
the   permissions of   the   file by   doing a `ls   -l  bin/gap.sh'. The
permissions should include execute permissions, if they don't you can set
them by

    you@unix> chmod 755 bin/gap.sh

Then copy  this script into   a directory  in   your search path,   i.e.,
``~/bin/'' as ``gap4beta''.  (If you are using the C-shell, you will also
have  to `rehash', so that the  C-shell adds ``gap4beta'' to its internal
tables).  When you later move GAP 4.beta to another location you only need
to edit this script.

    you@unix> cd ~
    you@unix> gap4beta

A set of test files is provided, running them all  takes some 20 minutes on
a Pentium Pro 200 Mhz.  So start with ``combinat.tst'' first.

    gap> Filename( DirectoriesLibrary("tst"), "combinat.tst" );
    "/usr/local/lib/gap4beta/tst/combinat.tst"
    gap> ReadTest(last);
    + $Id: INSTALL,v 4.17 1998/02/04 13:15:47 ahulpke Exp $
    + GAP4stones: 27801
    true

Now use `Read'  (*not* `ReadTest') to read the  file ``testall.g'' to run
*all* available test files.

    gap> Filename( DirectoriesLibrary("tst"), "testall.g" );
    "/usr/local/lib/gap4beta/tst/testall.g"
    gap> Read(last);
    You should start GAP4 using: `gap -N -M -m 16m'. The more 
    GAP4stones you get, the faster your system is.  The runtime of
    the following tests (in general) increases.  You should expect
    about 10000 GAP4stones on a Pentium 5, 133 MHz, about 22000 on
    a Pentium Pro, 200 Mhz.  The `next' time is an approximation of
    the running time for the next test.

    Architecture: i386-ibm-freebsd-gcc2

    test file         GAP4stones     time(msec)
    -------------------------------------------
    unknown.tst            15238             21    (next ~ 0 sec)
    listgen.tst           118000              5    (next ~ 0 sec)
    gaussian.tst            2738            325    (next ~ 0 sec)
    grpfree.tst            16390            133    (next ~ 0 sec)
    ffe.tst                10366            464    (next ~ 0 sec)
    cyclotom.tst           21176            221    (next ~ 0 sec)
    zmodnz.tst             46294            170    (next ~ 0 sec)
    mapping.tst            18225            541    (next ~ 0 sec)
    fldabnum.tst           23606            585    (next ~ 1 sec)
    vspcrow.tst            24626           1005    (next ~ 1 sec)
    modfree.tst            27141            850    (next ~ 1 sec)
    vspcmat.tst            27311           1302    (next ~ 1 sec)
    vspchom.tst            24712           1530    (next ~ 1 sec)
    combinat.tst           24858           1587    (next ~ 1 sec)
    vspcmali.tst           27482           1585    (next ~ 1 sec)
    [more files omitted]

You can ignore warnings from 'weakptr.tst', which stem from garbage
collections at different times.

The documentation  already contains the  corresponding ``dvi'' files, the
GAP 4.beta manual is split into  four parts.  Ask your system adminstrator
how to print ``dvi'' files.  In  case you want to  re-TeX them: `cd' into
the corresponding directory and execute `tex manual'.

GAP 4 Manual
    A Tutorial		    /usr/local/lib/gap4beta/doc/tut/manual.dvi
    Reference Manual        /usr/local/lib/gap4beta/doc/ref/manual.dvi

Extending GAP 4
    A Tutorial	            /usr/local/lib/gap4beta/doc/prg/manual.dvi
    Reference Manual        /usr/local/lib/gap4beta/doc/ext/manual.dvi



If the configuration fails
--------------------------

The configuration script runs various tests to determine the configuration
of your system. It produces a file `bin/<architecture>/config.h' which
contains definitions according to the test results.
It might be, however, that the tests used don't produce on
your machin the results they are expected to or that further tests are
necessary. If this is the case the easiest way is to edit the 'config.h'
script, remove all object files and call 'make' in the `bin/<architecture>'
subdirectory. If you have to resort to changing or amending this file,
please tell us what had to be changed (mail to
`gap-trouble@dcs.st-and.ac.uk'). If you had to add further definitions
please also tell what properties of your system these `#define's represent.

If GAP compiles but crashes while reading the library or during a garbage
collection with a bus error it is possible that the configuration script did
not guess the permitted pointer alignment correctly. This value is stored
in the line

#define C_STACK_ALIGN           2

of `config.h'. Increase the value to the next power of 2 (<= 8) and compile
GAP anew.

There is still a `Makefile' in the `src' directory, but it is
not used by the configuration process any longer. 
As a last resort you might want to try this file, but please still report
your problems to `gap-trouble'.

