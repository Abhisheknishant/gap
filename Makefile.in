#############################################################################
##
#W  Makefile                    GAP source                       Frank Celler
##
#H  @(#)$Id$
##
#Y  Copyright (C)  1997,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
##  This file is the top level make file.  It is generated from `Makefile.in'
##  by the `configure' script.  After unpacking GAP you simply type
##
##    ./configure
##
##  to create a make file and then
##
##    make
##
##  to compile and link GAP.
##
##  The "default" target:
##    - creates a subdirectory CPU-VENDOR-OS in the directory `bin',
##    - copies the configuration script into this directory,
##    - it switches into this directory and executes the configure script,
##    - it makes GAP in this directory.
##
##  The "clean" target:
##    - removes the subdirectory CPU-VENDOR-OS in the directory `bin'
##    - removes any files created by `configure'
##
##  The "testinstall" target:
##    - starts GAP and reads `tst/testinstall.g'
##
##  The "teststandard" target:
##    - starts GAP and reads all files `tst/*.tst'
##
##  The "teststandardrenormalize" target:
##    - starts GAP, reads all files `tst/*.tst', and replaces the scaling
##      factors  in the `STOP_TEST' statements
##
##  The "testinstall.g" target:
##    - creates `tst/testinstall.g' based on the existing version and the
##      preselected `tst/*.tst' files
## 
##  The "testpackages" target:
##    - runs the tests provided by the available packages
##
##  The "testpackagesload" target:
##    - tests loading of each available package
##
##  The "testmanuals" target:
##    - runs the examples in the main GAP documentation
##

SHELL=/bin/sh
CC=@CC@
BASECC=@BASECC@
TARGET=@target@
@SET_MAKE@
GMP_CFLAGS=@GMP_CFLAGS@
GMP_LIBS=@GMP_LIBS@
MAKE_GMP=@MAKE_GMP@
ifndef GMP_VER
 GMP_VER=@GMP_VER@
endif
ifndef ABI
 ABI=@ABI@
endif
ABI_CFLAGS=@ABI_CFLAGS@
export CFLAGS+=@ABI_CFLAGS@ @CFLAGS@
export NOREADLINE=@NOREADLINE@
export READLINEPREFIX=@READLINEPREFIX@
ifndef CONFIGNAME
 CONFIGNAME=@CONFIGNAME@
endif

TESTGAP = ./bin/gap-$(CONFIGNAME).sh -b -m 100m -o 512m -A -N -q -x 80 -r
TESTGAPauto = ./bin/gap-$(CONFIGNAME).sh -b -m 100m -o 512m -N -q -x 80 -r

default: compile

setconfig:
	if test -e sysinfo.gap-$(CONFIGNAME); then \
	  rm -f Makefile sysinfo.gap bin/gap.sh; \
	  ln -s sysinfo.gap-$(CONFIGNAME) sysinfo.gap; \
	  ln -s Makefile-$(CONFIGNAME) Makefile; \
	  ln -s gap-$(CONFIGNAME).sh bin/gap.sh; \
	else \
	  echo "There is no config with name: "$(CONFIGNAME); \
	fi;

config: bin/@target@-@BASECC@-$(CONFIGNAME)/configure  bin/@target@-@BASECC@-$(CONFIGNAME)/Makefile bin/@target@-@BASECC@-$(CONFIGNAME)/extern/Makefile 

bin/@target@-@BASECC@-$(CONFIGNAME)/configure: cnf/configure.out 
	mkdir -p bin/@target@-@BASECC@-$(CONFIGNAME)
	@rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/configure
	cp cnf/configure.out bin/@target@-@BASECC@-$(CONFIGNAME)/configure

bin/@target@-@BASECC@-$(CONFIGNAME)/Makefile bin/@target@-@BASECC@-$(CONFIGNAME)/extern/Makefile : bin/@target@-@BASECC@-$(CONFIGNAME)/configure cnf/config.hin cnf/gac.in extern/Makefile.in cnf/Makegap.in
	mkdir -p bin/@target@-@BASECC@-$(CONFIGNAME)/extern
	( cd bin/@target@-@BASECC@-$(CONFIGNAME) ; CC='$(CC)' ABI='$(ABI)' ABI_CFLAGS='$(ABI_CFLAGS)' GMP_LIBS='$(GMP_LIBS)' NOREADLINE='$(NOREADLINE)' READLINEPREFIX='$(READLINEPREFIX)' CONFIGNAME='$(CONFIGNAME)' ./configure --target=@target@ @gp_configure_options@ )

extern: config
	( cd bin/@target@-@BASECC@-$(CONFIGNAME)/extern ; $(MAKE) TARGET='$(TARGET)' BASECC='$(BASECC)' ABI='$(ABI)' ABI_CFLAGS='$(ABI_CFLAGS)' CC='$(CC)' GMP_VER='$(GMP_VER)' MAKE_GMP='$(MAKE_GMP)' CONFIGNAME='$(CONFIGNAME)' )

compile: extern
	( cd bin/@target@-@BASECC@-$(CONFIGNAME); $(MAKE) ABI='$(ABI)' CC='$(CC)' GMP_VER='$(GMP_VER)' GMP_CFLAGS='$(GMP_CFLAGS)' GMP_LIBS='$(GMP_LIBS)' READLINEPREFIX='$(READLINEPREFIX)'  NOREADLINE='$(NOREADLINE)' CONFIGNAME='$(CONFIGNAME)' )
	chmod +x bin/gap-$(CONFIGNAME).sh

static: extern
	( cd bin/@target@-@BASECC@-$(CONFIGNAME) ; $(MAKE) static CC='$(CC)' ABI='$(ABI)' )
	chmod +x bin/gap.sh
	( cd bin/@target@-@BASECC@-$(CONFIGNAME) ; strip gap@EXEEXT@)

strip: compile
	if ! grep darwin sysinfo.gap ; then ( cd bin/@target@-@BASECC@-$(CONFIGNAME); strip gap@EXEEXT@) ; fi

removewin: strip
	( rm -f bin/*.exe bin/*.dll bin/*.bat bin/*.pif "bin/GAP 4 PPC")

rebuild:
	rm -f config.cache config.log config.status
	touch src/*

ifndef CLEANME
 CLEANME=@CONFIGNAME@
endif

clean: clean_$(CLEANME)

clean_$(CLEANME): clean_gap_$(CLEANME) clean_gmp_$(CLEANME)
	rm -rf bin/@target@-@BASECC@-$(CONFIGNAME)


clean_gap: clean_gap_$(CLEANME)

clean_gap_$(CLEANME): rebuild
	rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/*.o
	rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/Makefile
	rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/config*
	rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/gac
	rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/gap
	rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/sysinfo*
	rm -f bin/gap-$(CONFIGNAME).sh
	rm -f sysinfo.gap-$(CONFIGNAME)
	(if ! test -h sysinfo.gap -a -e sysinfo.gap; then \
	  nextconf=`ls sysinfo.gap-* 2>/dev/null | head -1 | \
	          sed -e "s/sysinfo.gap-//g"`; \
	  if [ "x$$nextconf" != "x" ]; then \
	    echo "changing config to "$$nextconf; \
	    make setconfig CONFIGNAME=$$nextconf; \
	  else \
	    rm -f Makefile sysinfo.gap bin/gap.sh; \
	  fi; \
	fi)
	rm -f Makefile-$(CONFIGNAME)

clean_gmp: clean_gmp_$(CLEANME)

clean_gmp_$(CLEANME):
	if test -d bin/@target@-@BASECC@-$(CONFIGNAME)/extern/gmp-$(GMP_VER); then \
	 rm -rf bin/@target@-@BASECC@-$(CONFIGNAME)/extern/gmp-$(GMP_VER); fi
	if test -h bin/@target@-@BASECC@-$(CONFIGNAME)/extern/gmp; then \
	 rm -f bin/@target@-@BASECC@-$(CONFIGNAME)/extern/gmp; fi
	if test -d extern/gmp-$(GMP_VER); then \
	 (cd extern/gmp-$(GMP_VER); rm -f LASTBUILD.*; \
	  if test -r Makefile; then make distclean; fi ); fi

distclean:
	while test -e Makefile; do make clean; done

manuals:
	( echo 'SaveWorkspace( "doc/wsp.g" );' | $(TESTGAPauto) )
	( cd doc/ref; echo 'Read( "makedocrel.g" );' | \
          ../../$(TESTGAP) -L ../wsp.g > make_manuals.out )
	( cd doc/tut; echo 'Read( "makedocrel.g" );' | \
          ../../$(TESTGAP) -L ../wsp.g > make_manuals.out )
	( cd doc/ref; echo 'Read( "makedocrel.g" );' | \
          ../../$(TESTGAP) -L ../wsp.g > make_manuals.out )
	( cd doc/tut; echo 'Read( "makedocrel.g" );' | \
          ../../$(TESTGAP) -L ../wsp.g > make_manuals.out )
	( rm doc/wsp.g )


testinstall:
	mkdir -p dev/log
	( echo 'ReadGapRoot( "tst/testutil.g" ); \
            ReadGapRoot( "tst/testinstall.g" );' | $(TESTGAP) > \
            `date -u +dev/log/testinstall1_%Y-%m-%d-%H-%M` )
	( echo 'ReadGapRoot( "tst/testutil.g" ); LoadAllPackages(); \
            ReadGapRoot( "tst/testinstall.g" );' | $(TESTGAP) > \
            `date -u +dev/log/testinstall2_%Y-%m-%d-%H-%M` )

teststandard:
	mkdir -p dev/log
	( echo 'ShowSystemInformation(); RunStandardTests( [' > test.tmp; \
          grep -h "STOP_TEST" tst/*.tst | sed -e 's/^gap> STOP_TEST(/[/;s/);/],/' >> test.tmp; \
          echo '] ); ' >> test.tmp )
	( echo 'ReadGapRoot( "tst/testutil.g" ); Read( "test.tmp" );' | $(TESTGAP) > \
            `date -u +dev/log/teststandard1_%Y-%m-%d-%H-%M` )
	( echo 'ReadGapRoot( "tst/testutil.g" ); LoadAllPackages(); Read( "test.tmp" );' | $(TESTGAP) > \
            `date -u +dev/log/teststandard2_%Y-%m-%d-%H-%M` )
	( rm test.tmp )

teststandardrenormalize:
	mkdir -p dev/log
	( echo 'RunStandardTests( [' > test.tmp; \
          grep -h "STOP_TEST" tst/*.tst | \
            sed -e 's/^gap> STOP_TEST(/[/;s/);/],/' >> test.tmp; \
          echo '], true ); ShowSystemInformation();' \
          >> test.tmp; \
          echo 'ReadGapRoot( "tst/testutil.g" ); Read( "test.tmp" ); \
            CreateTestinstallFile(); Runtime();' | $(TESTGAP) > \
            `date -u +dev/log/teststandardrenormalize_%Y-%m-%d-%H-%M` )
	( rm test.tmp )

testinstall.g:
	( echo 'ReadGapRoot( "tst/testutil.g" ); \
            CreateTestinstallFile();' | $(TESTGAP) )            

testpackages:
	mkdir -p dev/log
	( echo 'SetAssertionLevel( 2 ); ReadGapRoot( "tst/testutil.g" ); \
            SaveWorkspace( "wsp.g" );' | $(TESTGAP) )
	( echo 'CreatePackageTestsInput( "testpackages.in", \
            [ "dev/log/testpackages1", "dev/log/testpackages2" ], \
            "$(TESTGAP) -L wsp.g" );'\
            | $(TESTGAP) -L wsp.g > /dev/null )
	( chmod 777 testpackages.in; ./testpackages.in; rm testpackages.in )
	( rm wsp.g )

testpackagesload:
	mkdir -p dev/log
	( echo 'ReadGapRoot( "tst/testutil.g" ); \
            SaveWorkspace( "wsp.g" );' | $(TESTGAP) )
	( echo 'CreatePackageLoadTestsInput( "testpackagesload.in", \
            "dev/log/testpackagesload1", \
            "$(TESTGAP) -L wsp.g", false, false );'\
            | $(TESTGAP) -L wsp.g > /dev/null )
	( chmod 777 testpackagesload.in; ./testpackagesload.in > \
            `date -u +dev/log/testpackagesload1_%Y-%m-%d-%H-%M`; rm testpackagesload.in )
	( rm wsp.g )
	( echo 'ReadGapRoot( "tst/testutil.g" ); \
            SaveWorkspace( "wsp.g" );' | $(TESTGAP) )
	( echo 'CreatePackageLoadTestsInput( "testpackagesload.in", \
            "dev/log/testpackagesloadN1", \
            "$(TESTGAP) -L wsp.g", false, true );'\
            | $(TESTGAP) -L wsp.g > /dev/null )
	( chmod 777 testpackagesload.in; ./testpackagesload.in > \
            `date -u +dev/log/testpackagesloadN1_%Y-%m-%d-%H-%M`; rm testpackagesload.in )
	( rm wsp.g )	
	( echo 'ReadGapRoot( "tst/testutil.g" ); \
            SaveWorkspace( "wsp.g" );' | $(TESTGAPauto) )
	( echo 'CreatePackageLoadTestsInput( "testpackagesload.in", \
            "testpackagesloadA", \
            "$(TESTGAPauto) -L wsp.g", true, false );'\
            | $(TESTGAPauto) -L wsp.g > /dev/null )
	( chmod 777 testpackagesload.in; ./testpackagesload.in > \
            `date -u +dev/log/testpackagesloadA_%Y-%m-%d-%H-%M`; rm testpackagesload.in )
	( rm wsp.g )
	( echo 'ReadGapRoot( "tst/testutil.g" ); \
            SaveWorkspace( "wsp.g" );' | $(TESTGAPauto) )
	( echo 'CreatePackageLoadTestsInput( "testpackagesload.in", \
            "testpackagesloadNA", \
            "$(TESTGAPauto) -L wsp.g", true, true );'\
            | $(TESTGAPauto) -L wsp.g > /dev/null )
	( chmod 777 testpackagesload.in; ./testpackagesload.in > \
            `date -u +dev/log/testpackagesloadNA_%Y-%m-%d-%H-%M`; rm testpackagesload.in )
	( rm wsp.g )

testmanuals:
	mkdir -p dev/log
	mkdir -p doc/test/tut
	mkdir -p doc/test/ref
	( echo 'LoadPackage( "gapdoc" ); Read( "tst/testutil.g" ); \
	  ExtractManualExamples( "tut" ); ExtractManualExamples( "ref" );' | $(TESTGAP) )
	( echo 'SetAssertionLevel( 2 ); LoadPackage( "gapdoc" ); \
	  SaveWorkspace( "doc/test/wsp.g" );' | $(TESTGAP) )
	( cd doc/test/tut; ../mktestx.sh )
	( cd doc/test/ref; ../mktestx.sh )
	(  cd doc/test; \
	  cat tut/diffs ref/diffs \
	  > `date -u +../../dev/log/testmanuals1_%Y-%m-%d-%H-%M` )
	( rm doc/test/tut/diffs; rm doc/test/ref/diffs )
	( echo 'SetAssertionLevel( 2 );  \
	  SaveWorkspace( "doc/test/wsp.g" );' | $(TESTGAPauto) )
	( cd doc/test/tut; ../mktestx.sh )
	( cd doc/test/ref; ../mktestx.sh )
	(  cd doc/test; \
	  cat tut/diffs ref/diffs \
	  > `date -u +../../dev/log/testmanualsA_%Y-%m-%d-%H-%M` )
	( rm doc/test/tut/diffs; rm doc/test/ref/diffs )
	( echo 'SetAssertionLevel( 2 ); LoadAllPackages(); \
	  SaveWorkspace( "doc/test/wsp.g" );' | $(TESTGAP) )
	( cd doc/test/tut; ../mktestx.sh )
	( cd doc/test/ref; ../mktestx.sh )
	(  cd doc/test; \
	  cat tut/diffs ref/diffs \
	  > `date -u +../../dev/log/testmanuals2_%Y-%m-%d-%H-%M` )
	( rm doc/test/tut/diffs; rm doc/test/ref/diffs )
	( rm doc/test/tut/*.tst; rm doc/test/ref/*.tst )  
	( rm doc/test/wsp.g )

cygwin:	extern
	( cd bin/@target@-@BASECC@-$(CONFIGNAME) ; $(MAKE) gapdll ABI='$(ABI)' CC='$(CC)' GMP_VER='$(GMP_VER)' GMP_CFLAGS='$(GMP_CFLAGS)' GMP_LIBS='$(GMP_LIBS)' READLINEPREFIX='$(READLINEPREFIX)'  NOREADLINE='$(NOREADLINE)'  )
	cp bin/@target@-@BASECC@-$(CONFIGNAME)/gapw95.exe bin
	cp bin/@target@-@BASECC@-$(CONFIGNAME)/gap.dll bin
	cp /bin/cygncurses-10.dll /bin/cygncursesw-10.dll \
	   /bin/cygpanel-10.dll /bin/cygwin1.dll \
	   /bin/libW11.dll /usr/bin/rxvt.exe /usr/bin/regtool.exe \
	   /bin/cygreadline7.dll /bin/cyggcc_s-1.dll /bin/cygpopt-0.dll \
	   /bin/cygstart.exe /bin/mintty.exe bin
	rm -rf terminfo
	mkdir terminfo 
	mkdir terminfo/c 
	mkdir terminfo/r
	mkdir terminfo/x
	mkdir terminfo/63
	mkdir terminfo/72
	mkdir terminfo/78
	cp /usr/share/terminfo/c/cygwin terminfo/c
	cp /usr/share/terminfo/r/rxvt terminfo/r
	cp /usr/share/terminfo/x/xterm terminfo/x
	cp /usr/share/terminfo/63/cygwin terminfo/63
	cp /usr/share/terminfo/72/rxvt terminfo/72
	cp /usr/share/terminfo/78/xterm terminfo/78

winbinp:
	( tar cfz ../winbin.tgz bin/*.dll bin/*.exe \
          bin/@target@-@BASECC@-$(CONFIGNAME)/gac \
          bin/@target@-@BASECC@-$(CONFIGNAME)/config.h \
          terminfo )

packages:
	./makepkgs

