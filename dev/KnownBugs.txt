Known bugs that are not going to be solved quickly

$Id:
---------------------------------------------------------------------------

The initials at the end of an entry show who has added this entry, they do
*not* automatically mean that the same person will work on it. Please add
a remark if you want to work on an entry.
Use '*' to mark each topic, and '-' for the subtopics.



* There is a problem, that can be reproduced in the following way.

 - After starting a gap session (I tried both version 4.3 and 4.dev, and
 both sparc+sunOS and pc+linux):

 RequirePackage( "grpconst" );
 SetInfoLevel( InfoGrpCon, 2 );
 FrattiniExtensions( ElementaryAbelianGroup( 3^2 ), 3^10 );

 - then after several hours (or maybe some days) of calculation, the
 calculation is interrupted with <ctrl>C and then, it is given
(repeatedly)

 DownEnv(1);res;

 In this way, my gap session crashes, saying

 Segmentation fault .


 My idea is that this is not related to the package grpconst, but it can
 happen with every heavy calculation, and that this could be a bug related
 to DownEnv. (MC)


* The following produces a Segmentation fault:

 GASMAN();
 return "display";

 gap> GASMAN();
 usage: GASMAN(
 "display"|"displayshort"|"clear"|"collect"|"message"|"partial" )
 not in any function
 Entering break read-eval-print loop ...
 you can 'quit;' to quit to outer loop, or
 you can replace the argument list <args> via 'return <args>;' to continue
 brk> return "display";
 Segmentation fault
 (MC)


* The corrected form

 GASMAN();
 return ["display"];

 or directly

 GASMAN("display");

 give an unexpected error:

 gap> GASMAN("display");
                                     type    alive    kbyte    total  kbyte
                                  integer        0        0        0      0
                        integer (>= 2^28)        0        0        0      0
                        integer (< -2^28)        0        0        0      0
 ..

 GASMAN: <cmd> must be "display" or "clear" or "global" or  or "collect" or "pa\
 rtial" or "message"
 not in any function
   Entering break read-eval-print loop ...
 (MC)


* There is a problem with Filename plus DirectoriesSystemPrograms.

 Suppose that I want to kwno the full path of the program xyz, for instance
 in order to call it with InputOutputLocalProcess. Suppose also that I have
 in the current directory a subdirectory called xyz too. Suppose further
 that the current directory is the first entry in the system path.

 It this situation, trying to get the full path of xyz gives:

 gap> d := DirectoriesSystemPrograms(  );
 [ dir("./"), dir("/bin/"), dir("/usr/bin/"), dir("/usr/local/bin/") ]
 gap> Filename( d, "xyz" );
 "./xyz"

 Although each of DirectoriesSystemPrograms and Filename works correctly,
 it is not possible to get the full path correctly.

 Exec("which xyz");
 /usr/local/bin/xyz

 But the output of Exec is not returned in Gap.

