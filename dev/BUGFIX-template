==Files

=== message, all XXX need replacing

# this is the kernel bit.
This fix changes the kernel. You have to recompile by calling `make' in the
directory in which you unpacked the fix.

Windows users can find a new binary in the file `wbin4rXXX.zoo' in the
`bugfixes' directory: Extract this archive in the same place as the fix
archive to get a new `gapw95.exe' file.

Macintosh users should download the file 'bin4rXXX-PPC.sit' (for PPC
machines) or 'bin4rXXX-68k.sit' (for 68k machines), from the 'bugfixes'
directory.

If you get one of these precompiled binaries you do not need to get any
precompiled binaries that would have come with earlier fixes (these old
binaries are obsolete now). Similarly, if you cannot find these binaries but
have further, newer, fixes to install check whether new binaries with these
fixes did not make the binaries of this fix obsolete.

# The announcement

Dear Forum,

This is to announce bugfix number XXX for GAP 4.XXX. The priority of this fix
is XXX.

You should not apply this fix to any version of GAP3, nor to any
version of GAP4.1.

This fix corrects:

XXX) List errors

Error 1) may XXXX error descriptions

Many thanks to:
XXX for reporting error XXX

     Installing the bugfix.
     ======================

Load the zoo archive `fix4rXXX.zoo' from the bugfixes web page
http://www-gap.dcs.st-and.ac.uk/~gap/Info4/bugfixes.html
Alternatively you can find this file in the `bugfixes' directory of the
GAP4 ftp distribution.

Unpack the file in the home directory of your GAP distribution (the
directory containing the `lib' and `grp' directories) using `unzoo -x
fix4rXXX.zoo'. `unzoo' may ask you for permissions to overwrite files,
answer this with Y)es or A)ll. This will replace the erroneous files by
fixed versions.

(On a PC or a Mac you will have to copy `unzoo' in the same directory and
enter the argument line after the call to `unzoo'.)
Make sure you have write permissions when applying the fix.

You can remove the file `descriptionXXX' afterwards.

After installing the bugfix you can test whether
the bugfix has been applied correctly by starting GAP from the `gap4XXX'
directory and issuing

gap> ReadTest("tst/bugfix.tst");
+ bugfixes test
+ GAP4stones: 835
true

(The output should be like this if the bugfixes have been installed
correctly. The number of GAP4stones may vary according to your system.)

Running this test is not a necessary part of installing a bug fix, but only
serves as a confirmation that everything went well. The test might run for
a long time and GAP will not output information while running. Note that it
is not possible to run the test twice without restarting GAP and that an
interruption of the test with CTRL-C will produce lots of (harmless) error
messages.

XXX Name and date XXX

== Comments


== Example code

