#############################################################################
##
#W  pcconstr.g               GAP Experimental                         BE & WN
##
#H  @(#)$Id: pcconstr.g,v 1.2 1999/02/25 20:13:46 werner Exp $
##
##  This file contains examples of polycyclic groups.
##
Revision.pcexam_g :=
    "@(#)$Id: pcconstr.g,v 1.2 1999/02/25 20:13:46 werner Exp $";


#############################################################################
##
##  Compute the semidirect product of a group generated by a given
##  list of integer matrices with the natural module.
##  
PcpGroupSplitByMatrices := function( mats )
    local   d,  n,  FLT,  zeroes,  i,  j,  M;
    
    d := Length( mats );
    n := Length( mats[1] );
    
    ##  Generators 1..d are the operating matrices, 
    ##  generators d+1..d+n are the basis of the natural module.
    FLT := FromTheLeftCollector( d+n );
    
    zeroes := [1..d]*0;
    for i in [1..d] do
        for j in [1..n] do
            ##  Generator d+j conjugate by generator i
            M := mats[i];
            SetConjugate( FLT, d+j, i, 
                    ObjByExponents( FLT, Concatenation( zeroes,M[j] ) ) );
            ##  Generator d+j conjugate by the inverse of generator i
#            M := M^-1;
#            SetConjugate( FLT, d+j, -i, 
#                    ObjByExponents( FLT, Concatenation( zeroes,M[j] ) ) );
        od;
    od;
    
    UpdatePolycyclicCollector( FLT );
    return PcpGroupByCollector( FLT );
end;

        
    

