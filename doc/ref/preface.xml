<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<!-- %% -->
<!-- %W  preface.tex               GAP documentation         Joachim Neubueser -->
<!-- %% -->
<!-- %H  @(#)<M>Id: preface.tex,v 4.44 2006/06/27 21:37:08 gap Exp </M> -->
<!-- %% -->
<!-- %Y  Copyright (C) 1997, Lehrstuhl D fÃ¼r Mathematik, RWTH Aachen, Germany -->
<!-- %% -->
<!-- %%  This file contains the preface of the GAP reference manual. -->
<!-- %% -->
<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

<Chapter Label="Preface">
<Heading>Preface</Heading>

Welcome to &GAP;. This preface serves not only to introduce 
<Q>the &GAP; Reference Manual</Q>, but also as an introduction to the
system as a whole.
<P/>
&GAP; stands  for  <E>Groups, Algorithms  and Programming</E>.  The  name was
chosen to reflect  the aim of  the  system, which  is introduced in  this
reference manual.  Since  that  choice,  the  system has become   somewhat
broader,    and  you will  also   find information   about algorithms and
programming  for other   algebraic structures,   such as semigroups   and
algebras.
<P/>
In addition to this manual, there is the <Q>&GAP; Tutorial</Q> 
<Alt Only="HTML">(see <Ref BookName="tut" Label="Preface"/>)</Alt>.
A lot of the functionality of the system and a number of
contributed extensions are provided as <Q>&GAP; packages</Q>
and each of these has its own manual.
This preface, however, serves as an introduction to the whole system.
<P/>
Subsequent sections of this preface explain the structure of the
system and the arrangements for the attribution of credit for
authorship and maintenance of the system; acknowledge those who have
made particular contributions to this and previous releases and
outline the changes from earlier versions.
<P/>

<!-- TEMPORARY PREFACE FOR GAP 4.5 BETA FOR PACKAGE AUTHORS -->

<Section Label="GAP 4.5 beta preface">
<Heading>Preface for the Beta Release of &GAP; 4.5</Heading>

<E>
This is a temporary preface for the beta release of &GAP; 4.5 for the package
authors. The rest of the preface will be revised an updated later before the
first public release of &GAP; 4.5. A standalone version of this preface is
available at <URL>ftp://ftp.gap-system.org/pub/gap/gap45/beta/gap45beta.pdf</URL>
</E>
<P/>

<E>Dear authors of &GAP; packages,</E>
<P/>

There have been many changes in the development version of &GAP; during the more
than two years since the release of &GAP;&nbsp;4.4.12. Some
major developments that were started earlier are now ready for release and it's
now high time for the &GAP;&nbsp;4.5 release, which we plan to have in August
2011.
<P/>

To allow you to test your packages with the new features and prepare them for 
the release, we have prepared a first beta version of &GAP;&nbsp;4.5, named 
&GAP;&nbsp;4.5.0, which is available to package authors in the following directory:
<P/>

<URL>ftp://ftp.gap-system.org/pub/gap/gap45/beta/</URL>
<P/>

This is especially important since some of the changes involve improvements 
to the GAP package interface to deal with problems which have arisen and 
cope more smoothly as the number of packages approaches~100 and the complexity 
of the functionality supplied by packages and the relationships between packages increases. 
A summary of these changes with links to the full documentation appears below.
<P/>

<Subsection Label="Archive Structure">
<Heading>Archive Structure</Heading>

The archive you will find to download at the above URL is not quite the same as the GAP 4.4 archives. For the general release of GAP 4.5 (and subsequent updates) 
we plan the main form of distribution of GAP to be a single dated archive file including current versions of all packages 
at that date and binaries for the most common 
environments (Windows, MacOS, and Linux on 32 and 64 bit intel processors). For this beta release, we do not quite have the setup for this fully in place. 
The beta archives will include packages, but not binaries.
<P/>
We plan that these archives will be rebuilt and marked with a new timestamp
whenever a new version of a package is released, which we expect to be quite frequently 
and we will make no special distinction between 
updates to packages and to the core system.
<P/>
The beta release however, and will only be updated 
if we deem there to be significant changes to the core system or to packages on which 
other packages depend, so that you have a reasonably stable platform for your testing. 
<P/>
Some of the packages that are loaded at the beginning of the GAP session 
currently produce errors; these may be ignored at the moment unless you 
need those particular packages, and should be eventually eliminated after 
relevant package updates.
</Subsection>


<Subsection Label="What we'd like you to do">
<Heading>What we'd like you to do</Heading>

Please download and install GAP 4.5.0 and test it with your package(s). 
Since we have not yet included binaries, you will need to compile the GAP kernel as usual. To run GAP under
Windows, you may either compile it yourself with Cygwin or write to Alexander 
Konovalov (<C>alexk@mcs.st-andrews.ac.uk</C>) and ask him to send you the  GAP 
executable file for Windows.
<P/>

If you have a new version of your package that you would like to release with the first
public release of &GAP;&nbsp;4.5, please prepare the new version of your package 
before July 1st 2011. When you've done that, please make the new version available to us for testing.
<P/>

If the new version is intended only to work with &GAP;&nbsp;4.5, please 
contact Alexander Konovalov writing to <C>alexk@mcs.st-andrews.ac.uk</C>
to arrange for the &GAP; Group to obtain your package for further tests 
and to include it later versions of the beta. If the
new version is compatible both with with &GAP;&nbsp;4.4 and &GAP;&nbsp;4.5, 
you may follow the standard procedure to publish it, but please
inform Alexander Konovalov about this as well.
<P/>

If a package is released to us later than July 1st 2011 and our testing shows any problems 
(most likely in interactions with other packages) we may not be able to 
sort them out in time to include it in the first released archive of &GAP;&nbsp;4.5. 
<P/>

Please also respond to this announcement of the beta release before May 1st, 2011
to Alexander Konovalov (<C>alexk@mcs.st-andrews.ac.uk</C>) 
telling us whether or not you should be able to update your package before the 
first public release of &GAP;&nbsp;4.5 -- we use email addresses of package authors 
given in the packages and would like to make sure that this announcement
was delivered to you.
<P/>

We have already tested most of the current versions of &GAP; packages with the
beta-release of &GAP;&nbsp;4.5, and did not find any serious problems. Thus, we hope
that for most packages the change will go smoothly - a version of the
package with basic compatibility with &GAP;&nbsp;4.5 can be produced with little or no
effort (for most packages simply recompiling the documentation would be good
enough). We would encourage you though, to do a little more work and adjust your package to use 
some of the new features of the GAP 4.5 package interface. 
<P/>

As well as testing your package, please let us know of any problems you find 
with &GAP;&nbsp;4.5 itself. We encourage you to test &GAP;&nbsp;4.5 on as 
many configurations as possible. We welcome all feedback to 
<C>support@gap-system.org</C> including comments, suggestions, bug 
reports and manual corrections.
<P/>

Below you will find a brief overview of main changes in &GAP;&nbsp;4.5 from the
package author's perspective, descriptions of known problems that we observed while
testing current packages with &GAP;&nbsp;4.5, and some further guidelines.
</Subsection>

<Subsection Label="What will be changed in GAP 4.5 for packages?">
<Heading>What will be changed in &GAP;&nbsp;4.5 for packages?</Heading>

Here we list primarily those changes which may have some implications for the 
packages. A more comprehensive list of other changes will be available in the 
public release. 

<List>

<Item>
Changing the distribution format providing one archive with the core system
and all currently redistributed packages.
</Item>

<Item>
The &GAP; kernel is now compiled by default to use the GMP large integer 
arithmetic library, speeding up arithmetic by a factor of 4 or more in many cases.
This slightly changes the build process, affecting mainly packages with 
dynamically loaded modules (see Chapter <Ref Chap="Installing GAP"/> for installation
instructions).
</Item>

<Item>
The &GAP; documentation has been converted to the &GAPDoc; format, and extensively reviewed, and now has only
two books: the Tutorial and the Reference Manual. Two other books, <Q>Extending 
&GAP;</Q> and <Q>Programming Tutorial</Q> became parts of the Reference Manual. Packages
that refer to parts of the &GAP; documentation may need to rebuild their manuals
to update references. Some packages still use the old <Q>gapmacro</Q> format for
their manuals, for which support may be discontinued in the future. There is no urgent need to convert such manuals into the &GAPDoc; 
format before &GAP;&nbsp;4.5 release, but we 
encourage you very much to consider doing this at some later point. 
</Item>

<Item>
The old concept of an autoloaded package has been integrated with the <E>needed</E> 
and <E>suggested</E> mechanism that already exists between packages. &GAP; itself 
now <Q>needs</Q> certain packages 
(for instance &GAPDoc;) and <Q>suggests</Q> others (typically the packages that were 
autoloaded). The decisions 
which packages &GAP; should need or suggest are made by developers based on 
technical criteria. They can be easily overridden by a user 
using the new <File>gap.ini</File> (see <Ref Sect="sect:gap.ini"/>). 
The default file ensures that all previously autoloaded packages are 
still loaded if present.
</Item>

<Item>
Optional <File>~/.gap</File> directory for user's customisations which may contain e.g.
locally installed packages (see <Ref Sect="GAP Root Directory"/>). 
If package installation instructions 
explain how to install the package in a non-standard location, they may need an update. 
This is intended to replace<File>.gaprc</File> files, but those are still 
supported for backwards compatibility (see <Ref Sect="obsolete_gaprc"/>).
</Item>

<Item>
Various improvements in the packages loading mechanism to make it more
informative, while avoiding confusing the user with warning and error 
messages for packages they didn't
know they were loading. For example, many messages are stored but not displayed
and there is a function <Ref Func="DisplayPackageLoadingLog"/> 
to show log messages that occur during package loading. 
Packages are encouraged to use these mechanisms to report 
problems in loading (e.g. binaries not compiled), rather than printing messages directly.

</Item>
</List>

</Subsection>

<Subsection Label="Suggestions for package authors">
<Heading>Suggestions for package authors</Heading>

Here we list known problems that we observed while testing current packages 
with &GAP;&nbsp;4.5. Shortly we will start to contact authors of individual 
packages with their further details.


<List>

<Item>
Several package break some tests from the &GAP; standard test suite 
(including <File>tst/testall.g</File> and <File>tst/testinstall.g</File>).
</Item>

<Item>
Some of the standard tests run 
significantly slower if all available packages are loaded (although not with 
just autoloaded packages). 
We are working on identifying  the responsible packages in all such cases.
</Item>

<Item>
Some packages have test files displaying the progress of tests. If the 
author wishes to have such tests output, it is recommended to produce it only
in extended packages tests, while the standard test should only compare the 
output with the test file and report any discrepancies. This is important for
the automated continuous build system which runs all tests from the &GAP; test
suite nightly/weekly on a number of configurations and reports about any new
discrepancies. 
</Item>

<Item>
Moreover, some packages have test files listed in <File>PackageInfo.g</File>
which are actually &GAP; input files, so they can not be automatically tested
with <Ref Oper="ReadTest"/>.
</Item>

<Item>
Some packages may need to update manual examples and test files
 because the order in which record components are 
printed has changed (but is now more consistent and less dependent on how the record was created).
</Item>

<Item>
Other problems may include missing declarations of local variables in 
functions, not reported before because of existing of a global variable with
the same name in &GAP;; creating global variables not following the recommended 
naming conventions; failure to load packages in a different order.
</Item>
</List>

Additionally, we encourage the package authors to revise their copyright
information, autoloading status and the list of needed and suggested
packages:

<List>

<Item>
If your packages use the text <Q>We adopt the copyright regulations of GAP as 
detailed in the copyright notice in the &GAP; manual</Q> or a similar statement, 
it may not present enough evidence for the package to be included in the 
installation in some cases when &GAP; is distributed together with another software. 
We advise to consider making the exact reference to the GPL license, for example: 
<P/>
<E>
<Package>package-name</Package> is free software; you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published by the 
Free Software Foundation; either version 2 of the License, or (at your option) 
any later version. For details, see the FSF's own site 
<URL>http://www.gnu.org/licenses/gpl.html</URL>.
</E>
</Item>

<Item>
If your package is currently autoloaded, please revise its status against 
the following technical criteria and consult with us in case of any doubts:

	<List>
	<Item>
	is there any code in the &GAP; library that calls functions from these 
	packages if they are available?
	</Item>
	<Item>
	does the package install superior methods for operations defined in the &GAP; 
	library?
	</Item>
	</List>
</Item>

<Item>
Please revise the list of needed and suggested packages and document 
explicitly all dependencies in the <File>PackageInfo.g</File> file:

	<List>
	<Item>
In some packages, explicit <Ref Func="LoadPackage"/> statements are
executed <E>when the package is loaded</E>. This may distort the order
of package loading and result in warning messages. It is recommended
to turn such dependencies into needed or suggested packages.
For example, a package can be designed in such a way that it can be loaded 
with restricted functionality if another package (or standalone program) 
is missing, and in this case the missing package (or binary) is <E>suggested</E>.
Alternatively, if the package author decides that loading the package in
this situation makes no sense, then the missing component is <E>needed</E>.
	</Item>

	<Item>
On the other hand, if <Ref Func="LoadPackage"/> is called inside functions of the
package then there is no such problem -- provided that these functions are 
called only after the package has been loaded, so it is not necessary to
specify the other package as suggested. Same applies to test files
and manual examples, which may be simply extended by calls to 
<Ref Func="LoadPackage"/>.
	</Item>

	<Item>
It may happen that a package B that is listed as a suggested package
of package A is actually needed by A. This can be detected only
by deinstalling the package B and trying to load A -- one may run into an
error or may see warnings about undefined global variables.
For example, if package A calls <Ref Func="LoadPackage"/> for B at loading time
(see above) then there is no other chance to find out whether B is in
fact needed.
	</Item>

	<Item>
If no explicit <Ref Func="LoadPackage"/> call occurs in A at loading time then one
might try the new possibility to load a package without loading its
suggested packages using the global option <C>OnlyNeeded</C> 
(see <Ref Func="LoadPackage"/> for further details); 
this way, one can check whether errors or warnings appear when B is not 
available. The consequence can then be either to turn B into a needed package 
or (since apparently B was not intended to become a needed package)
to change the code accordingly.
	</Item>

	<Item>
Finally, if the package manual is in the &GAPDoc; format, 
then &GAPDoc; is needed for this package.
	</Item>
	</List>
</Item>	
</List>
<E>Best wishes,</E>
<P/>
<E>the GAP development team</E>
<P/>
<E>April 2011</E>
<P/>

</Subsection>
</Section>

<!-- TEMPORARY PREFACE FOR GAP 4.5 BETA FOR PACKAGE AUTHORS ENDS HERE -->


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="The GAP System">
<Heading>The &GAP; System</Heading>
<#Include SYSTEM "../ref/overview.xml">
</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Authorship and Maintenance">
<Heading>Authorship and Maintenance</Heading>

Previous versions of &GAP; have simply included the increasingly long
list of all of the authors of the system with no indication as to who
contributed what. With &GAP; 4.3 we have introduced a new concept:
<E>modules</E>, to allow us to report the authorship of the system in more
detail. A module is a part of &GAP; which provides identifiable
functionality and has reasonably clean interfaces with the rest of the
system (usually it consists of separate files). Each module has its
own lists of authors and maintainers, which are not necessarily the
same. A preliminary list of modules and their attributions appears in
this manual. Note that we are still in the process of identifying
modules within the system, so large parts of the system do not yet
fall into any module. Since also we all collaborate closely in
designing, developing and debugging the system, it should not be
assumed that the list of modules in this manual represents all of
everyone's contribution, or that it lists everyone who made any
contribution at all to each module.
<P/>
All &GAP; packages are also considered to be modules and have their
own authors and maintainers. It should however be noted that some
packages provide interfaces between &GAP; and an external program, a
copy of which is included for convenience, and that, in these cases,
we do not claim that the module authors or maintainers wrote, or
maintain, this external program. Similarly, some modules and packages
include large data libraries that may have been computed by many
people. We try to make clear in each case what credit is attributable
to whom.
<P/>
We have, for some time, operated a refereeing system for contributed
packages, both to ensure the quality of the software we distribute,
and to provide recognition for the authors. We now consider this to be
a refereeing system for modules, and we would note, in particular
that, although it does not use the standard package interface, the
library of small groups has been refereed and accepted on exactly the
same basis as the accepted  packages.
<P/>
We also include with this distribution a
number of packages which have not (yet) gone through our refereeing
process. Some may be accepted in the future, in other cases the
authors have chosen not to submit them.  More information can be found
on our World Wide Web site,
see section <Ref Sect="Further Information about GAP"/>.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Acknowledgements">
<Heading>Acknowledgements</Heading>

Very many people have worked on, and contributed to, &GAP; over the
years since its inception. On our Web site you will find the prefaces
to the previous releases, each of which acknowledges people who have
made special contributions to that release. Even so, it is appropriate
to mention here Joachim NeubÃ¼ser whose vision of a free,
open and extensible system for computational algebra inspired &GAP;
in the first place, and Martin SchÃ¶nert, who was the
technical architect of &GAP; 3 and &GAP; 4.
<P/>
In the past years &GAP; development
has become a more and more widely distributed operation, and
increasingly dependent on hard voluntary work by developers not solely
or mainly employed to work on &GAP;. 
<P/>
Nevertheless, the development
process has remained constructive and friendly, even when wrangling
over difficult technical decisions, or sensitive questions of
attribution and credit and I must express our huge gratitude to
everyone involved for this.
<P/>
The list of modules which appears in this manual now gives a partial
idea of the contributions of different people, but we would like to
mention some people who have made important contributions to the
development process over the last years that do not show up there:
<P/>
Steve Linton has been leading the &GAP; group in St Andrews over the last
years and continues to be the main kernel maintainer and developer. The group
in St Andrews also maintains most of the development infrastructure and 
helps with user support.
<P/>
Thomas Breuer continues to develop many areas of the system, and
to play a vital role in clarifying our underlying concepts, despite
now working in industry.
<P/>
Frank LÃ¼beck set up a new system for automatic handling of
packages and helped with various kernel issues.
<P/>
Bettina Eick and her research group in Braunschweig have contributed much
functionality, mainly in the form of packages.
<P/>
Max NeunhÃ¶ffer has brought much fresh insight to bear on the
design of crucial parts of the system, and also done a lot of the
ensuing work; Stefan Kohl and Volkmar Felsch have both brought
enormous persistence to pointing out errors and inconsistencies in code and 
documentation, improving error messages and generally polishing the
system; and very many others have contributed ideas, insight and hard
work to produce this release. Senior colleagues, especially Joachim
NeubÃ¼ser, Edmund Robertson, and Charley Wright, continue to
provide encouragement support and constructive criticism.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Further Information about GAP">
<Heading>Further Information about &GAP;</Heading>
<Index Subkey="for GAP">web sites</Index>
<Index>email addresses</Index>
<Index Subkey="email address">support</Index>
<#Include SYSTEM "../ref/moreinfo.xml">
</Section>

</Chapter>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<!-- %% -->
<!-- %E -->

