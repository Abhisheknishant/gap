#############################################################################
##
#W  pcgscomp.gi                 GAP Library                      Frank Celler
##
#H  @(#)$Id$
##
#Y  Copyright (C)  1996,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
##  This file  contains the methods  for polycylic generating systems dealing
##  with or defined by a pc series.
##
Revision.pcgscomp_gi :=
    "@(#)$Id$";


#############################################################################
##

#M  PcgsByPcSequenceNC( <fam>, <pcs> )
##


#############################################################################
InstallMethod( PcgsByPcSequenceNC,
    "pc series",
    true,
    [ IsFamily,
      IsHomogeneousList ],
    0,

function( efam, pcs )
    local   pcgs,  rws;

    # quick check
    if not IsIdentical( efam, ElementsFamily(FamilyObj(pcs)) )  then
        Error( "elements family of <pcs> does not match <efam>" );
    fi;

    # construct a pcgs
    pcgs := PcgsByPcSequenceNC( efam, IsPcgsDefaultRep, pcs );

    # that it
    return pcgs;

end );


#############################################################################
InstallMethod( PcgsByPcSequenceNC,
    "pc series, empty sequence",
    true,
    [ IsFamily,
      IsList and IsEmpty ],
    0,

function( efam, pcs )
    local   pcgs,  rws;

    # construct a pcgs
    pcgs := PcgsByPcSequenceNC( efam, IsPcgsDefaultRep, pcs );

    # that it
    return pcgs;

end );


#############################################################################
##
#M  PcgsByPcSequence( <fam>, <pcs> )
##


#############################################################################
InstallMethod( PcgsByPcSequence,
    true,
    [ IsFamily,
      IsHomogeneousList ],
    0,

function( efam, pcs )
    #T  96/09/26 fceller  do some checks
    return PcgsByPcSequenceNC( efam, pcs );
end );
    

#############################################################################
InstallMethod( PcgsByPcSequence,
    true,
    [ IsFamily,
      IsList and IsEmpty ],
    0,

function( efam, pcs )
    #T  96/09/26 fceller  do some checks
    return PcgsByPcSequenceNC( efam, pcs );
end );


#############################################################################
##

#M  ExponentsOfPcElement( <pcgs>, <elm> )
##
InstallMethod( ExponentsOfPcElement,
    "pc series",
    IsCollsElms,
    [ IsPcgs,
      IsObject ],
    0,

function( pcgs, elm )
    local   series,  exps,  id,  depth,  exp;

    series := PcSeries(pcgs);
    exps   := List( pcgs, x -> 0 );
    id     := OneOfPcgs(pcgs);
    depth  := 1;

    while elm <> id  do
        while elm in series[depth]  do
            depth := depth + 1;
        od;
        exp := 0;
        repeat
            exp := exp+1;
            elm := LeftQuotient( pcgs[depth-1], elm );
        until elm in series[depth];
        exps[depth-1] := exp;
    od;

    return exps;

end );


#############################################################################
##
#M  RelativeOrders( <pcgs> )
##
InstallMethod( RelativeOrders,
    "pc series",
    true,
    [ IsPcgs ],
    0,

function( pcgs )
    local   ord,  pcs,  i;

    ord := [];
    pcs := PcSeries(pcgs);
    for i  in [ 1 .. Length(pcs)-1 ]  do
        Add( ord, Size(pcs[i]) / Size(pcs[i+1]) );
    od;
    return ord;
end );


#############################################################################
##
#M  PcSeries( <pcgs> )
##
InstallMethod( PcSeries,
    true,
    [ IsPcgs ],
    0,

function( pcgs )
    local   grp,  series,  i;

    # construct the group generated by <pcgs>
    #T  1996/10/01 fceller something seems to break for Difference or Set
    #T  grp := Group( pcgs, One(pcgs) );
    grp := Group( List( pcgs, x -> x ), OneOfPcgs(pcgs) );

    # construct the series
    series := [ grp ];
    for i  in [ 2 .. Length(pcgs) ]  do
        Add( series, SubgroupNC( grp, pcgs{[ i .. Length(pcgs) ]} ) );
    od;
    Add( series, TrivialSubgroup(grp) );

    return series;

end );


#############################################################################
##

#E  pcgscomp.gi	. . . . . . . . . . . . . . . . . . . . . . . . . . ends here
##
