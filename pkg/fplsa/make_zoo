#!/usr/bin/env perl

#A  Greg Gamble ... based in part on Frank Lübeck's packpack
## 
##  Usage: make_zoo
##
##  Uses perl and zoo to create just the <pname>-<version>.zoo
##  and copies the README to README.<pname> (both are placed in
##  the pkg directory).
##

#set values of <pname> and <version>
$pname = "fplsa";
$version = "1r1";

#remove old .zoo file and derived file: Makefile
system( "rm -f Makefile $pname$version.zoo" );

### Create new .zoo file in pkg directory ###################################
chdir "..";

# substrings (mainly suffixes) that determine files we want to exclude
$prune = "[._]cvs|[.]bbl|[.]aux|[.][ib]lg|[.]log|[.]ind|[.]idx".
         "|zoo|make_|[.]sw[op]|[.-]bak|bin|~|[.][#]";

# Create the .zoo file
system( "find $pname -path '*/CVS' -prune -o -print | egrep -v '$prune' |".
        "zoo ahI $pname$version.zoo" );

@files = `find $pname -path '*/CVS' -prune -o -print | egrep -v '$prune'`;
# Mark some files as text files
for $file ( @files ) {
  chomp $file;
  if ($file =~ /[.](txt|in|ini|msg|g(|[id])|htm(|l)|[ch])$/
      || $file =~ /[.](xml|tex|bib|bbl|six|tst|ms[kt])$/
      || $file =~ /(README|INSTALL|Makefile|config|make[.])/ 
      || $file =~ /[Cc](hange|HANGE)/) {
    system( "(echo '!TEXT!'; echo '/END') | zoo c $pname$version.zoo \'$file\'" );
  }
}

system( "mv $pname$version.zoo $pname" );

