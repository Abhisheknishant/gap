#!/bin/sh
#############################################################################
##
#W  makexpl            GAP 4 package `<pkgnam>'                 Thomas Breuer
##
#H  @(#)$Id: makexpl,v 1.1 2002/01/14 17:37:47 gap Exp $
##
#Y  Copyright (C)  2001,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
##  This script produces the file 'pkg/<pkgnam>/tst/docxpl.tst'
##  of {\GAP}~4 from the files of the package documentation.
##
##  It must be called from the directory 'pkg/<pkgnam>',
##  in the form `etc/makexpl'.
##
##  This script is used in the packages `atlasrep', `ctbllib', `genus',
##  `gpisotyp'.
##


#############################################################################
##
##  The input is taken from 'INFILES'.
##  The output is written to 'OUTFILE', whose string version is 'OUTNAME'.
##  'TMPFILE' is an intermediate file.
##  The old version of 'OUTFILE' is saved in 'OLDFILE'.
##
INFILES=doc/*.tex
OUTFILE=tst/docxpl.tst
OUTNAME="tst/docxpl.tst"
TMPFILE=tst/docxpl.new
OLDFILE=tst/docxpl.tst~
HEADNAM="tst/docxpl.hea"

rm -rf $TMPFILE


#############################################################################
##
##  First update the documentation if necessary.
##
( make manual )


#############################################################################
##
##
gawk --traditional \
    -v "HEADER=$HEADNAM" \
    'BEGIN {
         # Get the header of the file.
         printf( "# This file was created automatically, do not edit!\n" )
         while ( getline < HEADER && $0 !~ /Here the examples are added/ ) {
             if ( $0 !~ /docxpl.hea/ ) {
                 print( $0 );
             }
             else {
                 printf( "%s%s%s\n",
                         substr( $0, 1, index( $0, "docxpl.hea" )-1 ),
                         "docxpl.tst",
                         substr( $0, index( $0, "docxpl.hea" )+10 ) );
             }
         }
     }

     # Extract the examples from the documentation files;
     /^\\beginexample/ {
         getline
         if ( $0 ~ /beginexample/ ) {
             printf( "Error, already in example!\n" )
         }
         while ( substr( $0, 1, 11 ) != "\\endexample" ) {
             print( $0 );
             getline
         }
         printf( "\n" )
         getline;
         while ( substr( $0, 1, 13 ) == "\\beginexample" ) {
             getline
             if ( $0 ~ /beginexample/ ) {
                 printf( "Error, already in example!\n" )
             }
             while ( substr( $0, 1, 11 ) != "\\endexample" ) {
                 print( $0 );
                 getline
             }
             printf( "\n" )
             getline
         }
     }

     END {
         # Get the footer of the file.
         while ( getline < HEADER ) {
         print $0;
         }
     }' $INFILES > $TMPFILE


#############################################################################
##
##  Save the old version, and replace it by the new version.
##
if test -f $OUTFILE ; then mv $OUTFILE $OLDFILE; fi
sed -e 's/||/|/g' $TMPFILE > $OUTFILE
rm $TMPFILE


#############################################################################
##
##  Print the differences between old and new version.
##
if test -f $OLDFILE ; then diff -u $OLDFILE $OUTFILE; fi

exit 0


#############################################################################
##
#E

