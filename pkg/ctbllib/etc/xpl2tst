#!/bin/sh
#############################################################################
##
#W  xpl2tst                    GAP utilities                    Thomas Breuer
##
#H  @(#)$Id: xpl2tst,v 1.4 2005/09/07 16:06:58 gap Exp $
##
#Y  Copyright (C)  1999,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
##  This script produces a testfile <name>.tst from an example file
##  <name>.xpl when it is called in the form
##  xpl2tst <name>.xpl <name>.tst <pkgname>
##  where <pkgname> is the name of the directory.
##
##  Leave code enclosed by \beginexample and \endexample
##  or code enclosed by \begingap and \endgap for GAP,
##  treat START_TEST and STOP_TEST in a special way,
##  leave out other lines.
##
gawk --traditional \
    -v "INFILE=$1" \
    -v "PKGNAME=$3" \
    'BEGIN {
         printf( "# This file was created from %s, do not edit!\n", INFILE )
         name = "???"

         # Copy the header, replace percent symbols by hash symbols.
         while ( getline < INFILE && $0 !~ /%Y/ ) {
             line = $0;
             if ( line ~ /^%W  / ) {
                 name = substr( line, 5, index( line, ".xpl" )-5 )
             }
             gsub( "%", "#", line );
             if ( line ~ /.xpl/ ) {
                 printf( "%s%s%s\n",
                         substr( line, 1, index( line, ".xpl" )-1 ),
                         ".tst",
                         substr( line, index( line, ".xpl" )+4 ) );
             }
             else {
                 print( line )
             }
         }
         line = $0;
         gsub( "%", "#", line );
         print( line );
         getline < INFILE
         line = $0;
         gsub( "%", "#", line );
         print( line );
         printf( "##  In order to run the tests, one starts {\\GAP} from the `tst` subdirectory\n" )
         printf( "##  of the `pkg/%s` directory, and calls `ReadTest( \"%s.tst\" );`.\n",
                 PKGNAME, name )
         printf( "##\n" );
     }

     # Each block of lines between \beginexample and \endexample
     # or of lines between \begingap and \endgap
     # is left as it is.
     /^\\beginexample/ || /^\\begingap/ {
         getline
         while ( substr( $0, 1, 11 ) != "\\endexample" && substr( $0, 1, 7 ) != "\\endgap" ) {
             print( $0 );
             getline
         }
         getline;
         while ( substr( $0, 1, 13 ) == "\\beginexample" && substr( $0, 1, 9 ) == "\\begingap" ) {
             getline
             while ( substr( $0, 1, 11 ) != "\\endexample" && substr( $0, 1, 7 ) != "\\endgap" ) {
                 print( $0 );
                 getline
             }
             getline
         }
     }

     # Deal with the START_TEST and STOP_TEST statements.
     /^% gap> START_TEST/ || /^% gap> STOP_TEST/ {
         print( "" )
         print( substr( $0, 3 ) )
         print( "" )
     }

     END {
         # Print the footer.
         print( "#############################################################################" )
         print( "##" )
         print( "#E" )
         print( "" )
     }' < $1 > $2


#############################################################################
##
#E

