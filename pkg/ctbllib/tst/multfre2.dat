#############################################################################
##
#W  multfre2.dat    database of mult.-free perm. characters     Thomas Breuer
#W                                                               S. A. Linton
#W                                                                Z. E. Mpono
#W                                                                  
#W                                                                  
##
#H  @(#)$Id: multfre2.dat,v 1.4 2006/06/07 10:44:37 gap Exp $
##
#Y  Copyright (C)  2003,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
##  This file contains the following {\GAP} objects.
##
##  `MULTFREEINFO'
##      is the global variable that encodes the faithful multiplicity-free
##      permutation characters of the sporadic simple groups and their
##      automorphism groups, as classified in~\cite{BL96} (modulo bug fixes).
##
##  `MultFreePermChars'
##      is a function that can be used for computing more detailed data
##      about the permutation characters from the compact information
##      stored in `MULTFREEINFO'.
##
Revision.multfre2_dat :=
    "@(#)$Id: multfre2.dat,v 1.4 2006/06/07 10:44:37 gap Exp $";


#############################################################################
##
##  Check that the database of mult.-free permutation characters for the
##  sporadic simple groups and their automorphism groups has been loaded.
##
if not IsBound( MULTFREEINFO ) then
  Error( "please load the mult.-free permutation characters of the ",
         "sporadic simple groups and their automorphism groups first" );
fi;


#############################################################################
##
##  Print the banner if wanted.
##
if not GAPInfo.CommandLineOptions.q and not GAPInfo.CommandLineOptions.b then
  Print(
    "--------------------------------------------------------------------\n",
    "Loading the database of multiplicity-free permutation characters\n",
    "of the central extensions of the sporadic simple groups, and their\n",
    "automorphic extensions,\n",
    "by T. Breuer, S. A. Linton, and Z. E. Mpono;\n",
    "call `MultFreePermChars( <name> )' for accessing the data\n",
    "for the group whose character table has identifier <name>.\n",
    "--------------------------------------------------------------------\n"
  );
fi;


#############################################################################
##
#V  MULTFREEINFO
##
##  `MULTFREEINFO' is an immutable record.
##  Its components are the `Identifier' values of the {\GAP} character
##  tables of the sporadic simple groups and their central extensions,
##  and of their automorphic extensions.
##  The value of the component corresponding to the group $G$, say,
##  is a list containing in the first position a string denoting the name of
##  $G$ in {\LaTeX} format,
##  and in each of the remaining positions a pair `[<const>,<subgroup>]'
##  where <const> is a list of positive integers and <subgroup> is a string
##  that denotes the name of a subgroup $H$ of $G$, in {\LaTeX} format;
##  the sum of irreducible characters of $G$ at the positions in <const>
##  is a multiplicity-free permutation character of $G$ that is induced from
##  the trivial character of $H$.
##
MakeReadWriteGlobal( "MULTFREEINFO" );
BindGlobal( "MULTFREEINFO", ShallowCopy( MULTFREEINFO ) );

MULTFREEINFO.("2.M12"):= ["$2.M_{12}$",
[[1,2,18],"$M_{11} \\rightarrow (M_{12},1)$"],
[[1,3,18],"$M_{11} \\rightarrow (M_{12},2)$"],
[[1,2,3,7,8,18,24],"$A_6.2_1 \\rightarrow (M_{12},5)$"],
[[1,2,3,7,8,18,24],"$A_6.2_1 \\rightarrow (M_{12},8)$"],
[[1,2,7,8,12,22,23],"$3^2.2.S_4 \\rightarrow (M_{12},11)$"],
[[1,3,7,8,12,22,23],"$3^2.2.S_4 \\rightarrow (M_{12},13)$"],
[[1,2,7,8,12,18,20,21,24],"$3^2.2.S_4 \\rightarrow (M_{12},11)$"],
[[1,3,7,8,12,18,20,21,24],"$3^2.2.S_4 \\rightarrow (M_{12},13)$"],
[[1,2,6,7,8,10,12,13,18,20,21,22,23,24],"$3^2:2.A_4 \\rightarrow (M_{12},12)$\
"],
[[1,3,6,7,8,9,12,13,18,20,21,22,23,24],"$3^2:2.A_4 \\rightarrow (M_{12},14)$"\
],
];

MULTFREEINFO.("2.M22"):= ["$2.M_{22}$",
[[1,2,5,7,9,17,18,21],"$2^4:A_5 \\rightarrow (M_{22},3)$"],
[[1,2,7,15,16],"$A_7 \\rightarrow (M_{22},4)$"],
[[1,2,7,15,16],"$A_7 \\rightarrow (M_{22},5)$"],
[[1,2,5,6,7,16,21],"$2^3:L_3(2) \\rightarrow (M_{22},7)$"],
];

MULTFREEINFO.("3.M22"):=["$3.M_{22}$",
[[1,2,5,7,9,13,14,21,22,23,24,27,28],"$2^4:A_5 \\rightarrow (M_{22},3)$"],
[[1,2,5,7,13,14,21,22,23,24],"$2^4:S_5 \\rightarrow (M_{22},6)$"],
[[1,2,5,6,7,13,14,19,20,21,22,23,24],"$2^3:L_3(2) \\rightarrow (M_{22},7)$"],
[[1,2,5,7,8,9,13,14,21,22,23,24,25,26,27,28],"$L_2(11) \\rightarrow (M_{22},9\
)$"],
];

MULTFREEINFO.("4.M22"):=["$4.M_{22}$",
];

MULTFREEINFO.("6.M22"):=["$6.M_{22}$",
[[1,2,5,7,9,17,18,21,24,25,32,33,34,35,38,39,52,53,54,55,56,57],"$2^4:A_5 \\r\
ightarrow (2.M_{22},1), (3.M_{22},1)$"],
[[1,2,5,6,7,16,21,24,25,30,31,32,33,34,35,62,63],"$2^3:L_3(2) \\rightarrow (2\
.M_{22},4), (3.M_{22},3)$"],
];

MULTFREEINFO.("12.M22"):=["$12.M_{22}$",
];

MULTFREEINFO.("2.J2"):=["$2.J_2$",
[[1,6,7,25,26],"$U_3(3) \\rightarrow (J_2,1)$"],
];

MULTFREEINFO.("2.HS"):=["$2.HS$",
[[1,2,5,7,26,27],"$U_3(5) \\rightarrow (HS,3)$"],
[[1,2,6,7,26,27],"$U_3(5) \\rightarrow (HS,5)$"],
[[1,2,3,4,5,6,7,9,10,26,27,30,31],"$A_8 \\rightarrow (HS,8)$"],
[[1,2,3,5,7,10,13,16,22,25,26,27,28,29,37,38],"$M_{11} \\rightarrow (HS,10)$"\
],
[[1,2,3,6,7,10,13,16,22,25,26,27,28,29,37,38],"$M_{11} \\rightarrow (HS,11)$"\
],
];

MULTFREEINFO.("3.J3"):=["$3.J_3$",
];

MULTFREEINFO.("3.McL"):=["$3.McL$",
[[1,4,9,14,15,20,41,42,45,46,47,48,57,58],"$2.A_8 \\rightarrow (McL,6)$"],
];

MULTFREEINFO.("2.Ru"):=["$2.Ru$",
[[1,4,5,6,7,37,38,43,44],"$^2F_4(2)^\\prime \\rightarrow (Ru,2)$"],
];

MULTFREEINFO.("2.Suz"):=["$2.Suz$",
[[1,2,3,9,11,12,45,46,50,51],"$U_5(2) \\rightarrow (Suz,4)$"],
];

MULTFREEINFO.("3.Suz"):=["$3.Suz$",
[[1,4,5,44,45,52,53],"$G_2(4) \\rightarrow (Suz,1)$"],
[[1,2,3,9,11,12,46,47,50,51,62,63,78,79],"$U_5(2) \\rightarrow (Suz,4)$"],
[[1,2,4,6,9,12,16,17,27,44,45,48,49,52,53,68,69,70,71,82,83,88,89],"$2_-^{1+6\
}.U_4(2) \\rightarrow (Suz,5)$"],
[[1,3,4,5,9,11,12,15,17,27,28,30,33,50,51,62,63,78,79,82,83,94,95,96,97,104,1\
05],"$2^{4+6}:3.A_6 \\rightarrow (Suz,6)$"],
];

MULTFREEINFO.("6.Suz"):=["$6.Suz$",
[[1,2,3,9,11,12,45,46,50,51,79,80,83,84,95,96,111,112,153,154,157,158,159,160\
,177,178],"$U_5(2) \\rightarrow (2.Suz,1), (3.Suz,2)$"],
];

MULTFREEINFO.("3.ON"):=["$3.ON$",
[[1,2,7,8,11,37,38,51,52,53,54],"$L_3(7):2 \\rightarrow (ON,1)$"],
[[1,2,7,9,11,35,36,51,52,53,54],"$L_3(7):2 \\rightarrow (ON,3)$"],
[[1,2,7,8,10,11,18,37,38,51,52,53,54,59,60],"$L_3(7) \\rightarrow (ON,2)$"],
[[1,2,7,9,10,11,18,35,36,51,52,53,54,59,60],"$L_3(7) \\rightarrow (ON,4)$"],
];

MULTFREEINFO.("2.Fi22"):=["$2.Fi_{22}$",
[[1,3,9,66,73],"$O_7(3) \\rightarrow (Fi_{22},2)$"],
[[1,3,9,66,74],"$O_7(3) \\rightarrow (Fi_{22},3)$"],
[[1,7,9,13,73,76],"$O_8^+(2):S_3 \\rightarrow (Fi_{22},4)$"],
[[1,7,9,13,74,77],"$O_8^+(2):S_3 \\rightarrow (Fi_{22},4)$"],
[[1,4,7,8,9,13,15,73,74,76,77],"$O_8^+(2):3 \\rightarrow (Fi_{22},5)$"],
[[1,3,7,9,13,14,17,66,73,76,80],"$O_8^+(2):2 \\rightarrow (Fi_{22},6)$"],
[[1,3,7,9,13,14,17,66,74,77,80],"$O_8^+(2):2 \\rightarrow (Fi_{22},6)$"],
];

MULTFREEINFO.("3.Fi22"):=["$3.Fi_{22}$",
[[1,7,9,13,66,67,74,75,80,81],"$O_8^+(2):S_3 \\rightarrow (Fi_{22},4)$"],
[[1,4,7,8,9,13,15,78,79,88,89],"$O_8^+(2):3 \\rightarrow (Fi_{22},5)$"],
[[1,4,7,8,9,13,15,66,67,68,69,74,75,80,81,84,85],"$O_8^+(2):3 \\rightarrow (F\
i_{22},5)$"],
[[1,3,7,9,13,14,17,66,67,74,75,78,79,80,81,88,89],"$O_8^+(2):2 \\rightarrow (\
Fi_{22},6)$"],
[[1,3,5,7,9,10,13,17,25,28,66,67,74,75,78,79,80,81,88,89,90,91,104,105],"$2^6\
:S_6(2) \\rightarrow (Fi_{22},8)$"],
[[1,4,5,9,10,26,31,32,39,45,53,74,75,78,79,82,83,104,105,106,107,140,141,142,\
143],"$^2F_4(2)^\\prime \\rightarrow (Fi_{22},9)$"],
];

MULTFREEINFO.("6.Fi22"):=["$6.Fi_{22}$",
[[1,7,9,13,73,76,115,116,123,124,129,130,219,220],"$O_8^+(2):S_3 \\rightarrow\
 (2.Fi_{22},3), (3.Fi_{22},1)$"],
[[1,7,9,13,74,77,115,116,123,124,129,130,221,222],"$O_8^+(2):S_3 \\rightarrow\
 (2.Fi_{22},4), (3.Fi_{22},1)$"],
[[1,4,7,8,9,13,15,73,74,76,77,127,128,137,138,231,232],"$O_8^+(2):3 \\rightar\
row (2.Fi_{22},5), (3.Fi_{22},2)$"],
[[1,4,7,8,9,13,15,73,74,76,77,115,116,117,118,123,124,129,130,133,134,219,220\
,221,222],"$O_8^+(2):3 \\rightarrow (2.Fi_{22},5), (3.Fi_{22},3)$"],
[[1,3,7,9,13,14,17,66,73,76,80,115,116,123,124,127,128,129,130,137,138,219,22\
0,231,232],"$O_8^+(2):2 \\rightarrow (2.Fi_{22},6), (3.Fi_{22},4)$"],
[[1,3,7,9,13,14,17,66,74,77,80,115,116,123,124,127,128,129,130,137,138,221,22\
2,231,232],"$O_8^+(2):2 \\rightarrow (2.Fi_{22},7), (3.Fi_{22},4)$"],
];

MULTFREEINFO.("2.Co1"):=["$2.Co_1$",
[[1,3,6,10,102,104,107],"$Co_2 \\rightarrow (Co_1,1)$"],
[[1,3,6,10,14,26,32,102,104,107,114,118],"$Co_3 \\rightarrow (Co_1,5)$"],
];

MULTFREEINFO.("3.F3+"):=["$3.F_{3+}$",
[[1,3,4,109,110,113,114],"$Fi_{23} \\rightarrow (F_{3+},1)$"],
[[1,2,3,4,5,8,11,13,16,20,24,26,27,29,38,41,45,109,110,111,112,113,114,117,11\
8,119,120,123,124,125,126,129,130,137,138,153,154,177,178,183,184,187,188],"$\
O_{10}^-(2) \\rightarrow (F_{3+},2)$"],
];

MULTFREEINFO.("2.B"):=["$2.B$",
[[1,2,3,5,7,8,9,12,13,15,17,23,27,30,32,40,41,54,63,68,77,81,83,185,186,187,1\
88,189,194,195,196,203,208,220],"$Fi_{23} \\rightarrow (B,4)$"],
];

MULTFREEINFO.("2.M12.2"):=["$2.M_{12}.2$",
[[1,2,3,26,27],"$M_{11} \\rightarrow (M_{12}.2,1)$"],
[[1,3,9,12,26,27,33],"$L_2(11).2 \\rightarrow (M_{12}.2,2)$"],
[[1,3,9,12,26,27,32],"$L_2(11).2 \\rightarrow (M_{12}.2,2)$"],
];

MULTFREEINFO.("Isoclinic(2.M12.2)"):=["$(2.M_{12}.2)^*$",
[[1,2,3,26,27],"$M_{11} \\rightarrow (M_{12}.2,1)$"],
];

MULTFREEINFO.("2.M22.2"):=["$2.M_{22}.2$",
[[1,3,9,13,18,30,33],"$2^4:S_5 \\rightarrow (M_{22}.2,6)$"],
[[1,3,9,13,18,30,32],"$2^4:S_5 \\rightarrow (M_{22}.2,6)$"],
[[1,2,3,4,13,14,26,27,28,29],"$A_7 \\rightarrow (M_{22}.2,7)$"],
[[1,3,9,11,13,29,33],"$2^3:L_3(2) \\times 2 \\rightarrow (M_{22}.2,11)$"],
[[1,3,9,11,13,28,32],"$2^3:L_3(2) \\times 2 \\rightarrow (M_{22}.2,11)$"],
[[1,2,3,4,9,10,11,12,13,14,28,29,32,33],"$2^3:L_3(2) \\rightarrow (M_{22}.2,1\
2)$"],
[[1,4,9,13,16,18,26,27,29,36],"$L_2(11).2 \\rightarrow (M_{22}.2,16)$"],
[[1,4,9,13,16,18,26,27,28,37],"$L_2(11).2 \\rightarrow (M_{22}.2,16)$"],
];

MULTFREEINFO.("Isoclinic(2.M22.2)"):=["$(2.M_{22}.2)^*$",
[[1,2,3,4,13,14,26,27,28,29],"$A_7 \\rightarrow (M_{22}.2,7)$"],
[[1,2,3,4,9,10,11,12,13,14,28,29,32,33],"$2^3:L_3(2) \\rightarrow (M_{22}.2,1\
2)$"],
];

MULTFREEINFO.("3.M22.2"):=["$3.M_{22}.2$",
[[1,3,9,13,18,22,26,27,29],"$2^4:S_5 \\rightarrow (M_{22}.2,6)$"],
[[1,3,9,13,22,26,27],"$2^5:S_5 \\rightarrow (M_{22}.2,8)$"],
[[1,3,4,9,13,16,22,26,27,29],"$2^4:(A_5 \\times 2) \\rightarrow (M_{22}.2,10)\
$"],
[[1,3,9,11,13,22,25,26,27],"$2^3:L_3(2) \\times 2 \\rightarrow (M_{22}.2,11)$\
"],
[[1,4,9,13,16,18,22,26,27,28,29],"$L_2(11).2 \\rightarrow (M_{22}.2,16)$"],
];

MULTFREEINFO.("4.M22.2"):=["$4.M_{22}.2$",
];

MULTFREEINFO.("Isoclinic(4.M22.2)"):=["$(4.M_{22}.2)^*$",
];

MULTFREEINFO.("6.M22.2"):=["$6.M_{22}.2$",
[[1,3,9,13,18,30,33,38,42,43,45,52,53,54],"$2^4:S_5 \\rightarrow (M_{22}.2,6)\
$"],
[[1,3,9,13,18,30,32,38,42,43,45,52,53,54],"$2^4:S_5 \\rightarrow (M_{22}.2,6)\
$"],
[[1,3,9,11,13,29,33,38,41,42,43,57],"$2^3:L_3(2) \\times 2 \\rightarrow (M_{2\
2}.2,11)$"],
[[1,3,9,11,13,28,32,38,41,42,43,57],"$2^3:L_3(2) \\times 2 \\rightarrow (M_{2\
2}.2,11)$"],
[[1,4,9,13,16,18,26,27,29,36,38,42,43,44,45,49,50,51,55,56],"$L_2(11).2 \\rig\
htarrow (M_{22}.2,16)$"],
[[1,4,9,13,16,18,26,27,28,37,38,42,43,44,45,49,50,51,55,56],"$L_2(11).2 \\rig\
htarrow (M_{22}.2,16)$"],
];

MULTFREEINFO.("Isoclinic(6.M22.2)"):=["$(6.M_{22}.2)^*$",
];

MULTFREEINFO.("12.M22.2"):=["$12.M_{22}.2$",
];

MULTFREEINFO.("Isoclinic(12.M22.2)"):=["$(12.M_{22}.2)^*$",
];

MULTFREEINFO.("2.J2.2"):=["$2.J_2.2$",
];

MULTFREEINFO.("Isoclinic(2.J2.2)"):=["$(2.J_2.2)^*$",
[[1,5,7,31],"$U_3(3).2 \\rightarrow (J_2.2),1)$"],
[[1,5,7,31],"$U_3(3).2 \\rightarrow (J_2.2),1)$"],
[[1,4,7,8,10,12,17,29,30,31,37,38],"$3.A_6.2_3 \\rightarrow (J_2.2),5)$"],
];

MULTFREEINFO.("2.HS.2"):=["$2.HS.2$",
[[1,3,5,7,9,10,14,16,42,44],"$A_8 \\times 2 \\rightarrow (HS.2,10)$"],
[[1,4,5,7,9,10,14,17,42,44],"$A_8.2 \\rightarrow (HS.2,11)$"],
];

MULTFREEINFO.("Isoclinic(2.HS.2)"):=["$(2.HS.2)^*$",
];

MULTFREEINFO.("3.J3.2"):=["$3.J_3.2$",
];

MULTFREEINFO.("3.McL.2"):=["$3.M^cL.2$",
[[1,7,14,24,26,30,42,44,45,50],"$2.S_8 \\rightarrow (M^cL.2,9)$"],
];

MULTFREEINFO.("2.Suz.2"):=["$2.Suz.2$",
[[1,4,5,14,19,21,71,75],"$U_5(2).2 \\rightarrow (Suz.2,8)$"],
[[1,4,5,14,19,21,71,75],"$U_5(2).2 \\rightarrow (Suz.2,8)$"],
[[1,5,6,14,19,21,22,23,33,48,71,75,89,90],"$3^5:(M_{11} \\times 2) \\rightarr\
ow (Suz.2,12)$"],
[[1,5,6,14,19,21,22,23,33,48,71,75,89,90],"$3^5:(M_{11} \\times 2) \\rightarr\
ow (Suz.2,12)$"],
];

MULTFREEINFO.("Isoclinic(2.Suz.2)"):=["$(2.Suz.2)^*$",
];

MULTFREEINFO.("3.Suz.2"):=["$3.Suz.2$",
[[1,7,9,69,73],"$G_2(4).2 \\rightarrow (Suz.2,1)$"],
[[1,4,5,14,19,21,70,72,78,86],"$U_5(2).2 \\rightarrow (Suz.2,8)$"],
[[1,4,7,11,14,21,26,27,38,69,71,73,81,82,88,91],"$2^{1+6}_-.U_4(2).2 \\righta\
rrow (Suz.2,10)$"],
[[1,5,7,9,14,19,21,23,27,38,40,44,47,72,78,86,88,94,95,99],"$2^{4+6}:3S_6 \\r\
ightarrow (Suz.2,13)$"],
];

MULTFREEINFO.("6.Suz.2"):=["$6.Suz.2$",
[[1,4,5,14,19,21,71,75,109,111,117,125,146,148,149,158],"$U_5(2).2 \\rightarr\
ow (Suz.2,8)$"],
[[1,4,5,14,19,21,71,75,109,111,117,125,146,148,149,158],"$U_5(2).2 \\rightarr\
ow (Suz.2,8)$"],
];

MULTFREEINFO.("Isoclinic(6.Suz.2)"):=["$(6.Suz.2)^*$",
];

MULTFREEINFO.("3.ON.2"):=["$3.ON.2$",
];

MULTFREEINFO.("2.Fi22.2"):=["$2.Fi_{22}.2$",
[[1,2,5,6,17,18,113,114,118],"$O_7(3) \\rightarrow (Fi_{22}.2,3)$"],
[[1,2,13,14,17,18,25,26,118,121],"$O_8^+(2):S_3 \\rightarrow (Fi_{22}.2,5)$"],
[[1,8,13,15,17,25,29,118,121],"$O_8^+(2):3 \times 2 \\rightarrow (Fi_{22}.2,6\
)$"],
[[1,2,5,6,13,14,17,18,25,26,27,28,33,34,113,114,118,121,126,127],"$O_8^+(2):2\
 \\rightarrow (Fi_{22}.2,10)$"],
[[1,7,9,17,19,49,58,68,75,88,128,129,146],"${^2F_4(2)^{\\prime}}.2 \\rightarrow (Fi_{22}.\
2,16)$"],
[[1,7,9,17,19,49,58,68,75,88,128,129,146],"${^2F_4(2)^{\\prime}}.2 \\rightarrow (Fi_{22}.\
2,16)$"],
];

MULTFREEINFO.("Isoclinic(2.Fi22.2)"):=["$(2.Fi_{22}.2)^*$",
[[1,2,5,6,17,18,113,114,118],"$O_7(3) \\rightarrow (Fi_{22}.2),3)$"],
[[1,2,13,14,17,18,25,26,118,121],"$O_8^+(2):S_3 \\rightarrow (Fi_{22}.2),5)$"\
],
[[1,7,13,16,17,25,30,118,121],"$O_8^+(2):S_3 \\rightarrow (Fi_{22}.2),7)$"],
[[1,2,5,6,13,14,17,18,25,26,27,28,33,34,113,114,118,121,126,127],"$O_8^+(2):2\
 \\rightarrow (Fi_{22}.2),10)$"],
[[1,5,6,7,13,16,17,25,27,28,30,33,34,113,114,118,121,126,127],"$O_8^+(2):2 \\\
rightarrow (Fi_{22}.2),11)$"],
];

MULTFREEINFO.("3.Fi22.2"):=["$3.Fi_{22}.2$",
[[1,13,17,25,113,117,120],"$O_8^+(2):S_3 \\times 2 \\rightarrow (Fi_{22}.2,4)\
$"],
[[1,8,13,15,17,25,29,113,114,117,120,122],"$O_8^+(2):3 \\times 2 \\rightarrow\
 (Fi_{22}.2,6)$"],
[[1,7,13,16,17,25,30,119,124],"$O_8^+(2):S_3 \\rightarrow (Fi_{22}.2,7)$"],
[[1,7,13,16,17,25,30,113,114,117,120,122],"$O_8^+(2):S_3 \\rightarrow (Fi_{22\
}.2,7)$"],
[[1,5,13,17,25,27,33,113,117,119,120,124],"$O_8^+(2):2 \\times 2 \\rightarrow\
 (Fi_{22}.2,8)$"],
[[1,5,9,13,17,19,25,33,46,52,113,117,119,120,124,125,132],"$2^7:S_6(2) \\righ\
tarrow (Fi_{22}.2,14)$"],
[[1,7,9,17,19,49,58,68,75,88,117,119,121,132,133,150,151],"${^2F_4(2)^{\\prime}}.2 \\righ\
tarrow (Fi_{22}.2,16)$"],
];

MULTFREEINFO.("6.Fi22.2"):=["$6.Fi_{22}.2$",
[[1,8,13,15,17,25,29,118,121,151,152,155,158,160,203,204],"$O_8^+(2):3 \\time\
s 2 \\rightarrow (Fi_{22}.2,6)$"],
[[1,7,9,17,19,49,58,68,75,88,128,129,146,155,157,159,170,171,188,189,228,229]\
,"${^2F_4(2)^{\\prime}}.2 \\rightarrow (Fi_{22}.2,16)$"],
[[1,7,9,17,19,49,58,68,75,88,128,129,146,155,157,159,170,171,188,189,228,229]\
,"${^2F_4(2)^{\\prime}}.2 \\rightarrow (Fi_{22}.2,16)$"],
];

MULTFREEINFO.("Isoclinic(6.Fi22.2)"):=["$(6.Fi_{22}.2)^*$",
[[1,7,13,16,17,25,30,118,121,157,162,209],"$O_8^+(2):S_3 \\rightarrow (Fi_{22\
}.2,7)$"],
[[1,7,13,16,17,25,30,118,121,157,162,209],"$O_8^+(2):S_3 \\rightarrow (Fi_{22\
}.2,7)$"],
[[1,7,13,16,17,25,30,118,121,151,152,155,158,160,203,204],"$O_8^+(2):S_3 \\ri\
ghtarrow (Fi_{22}.2,7)$"],
];

MULTFREEINFO.("3.F3+.2"):=["$3.F_{3+}.2$",
[[1,5,7,184,186],"$Fi_{23} \\times 2 \\rightarrow (F_{3+}.2,1)$"],
[[1,4,5,7,10,15,21,26,28,37,44,48,51,54,73,75,83,184,185,186,188,189,191,192,\
194,198,206,218,221,223],"$O_{10}^-(2).2 \\rightarrow (F_{3+}.2,3)$"],
];

MakeImmutable( MULTFREEINFO );


#############################################################################
##
#F  MultFreePermChars( <name> )
##
##  For a string <name> that is the name of a sporadic simple group,
##  of a central extension of a sporadic simple group,
##  or of an automorphic extension of such a group,
##  `MultFreePermChars' returns a list of records that describe the faithful
##  multiplicity-free permutation characters of this group,
##  in a format that is similar to the classification shown in~\cite{BL96}.
##
##  If <name> is the string `\"all\"' then `MultFreePermChars' returns the
##  list of faithful multiplicity-free permutation characters of all sporadic
##  simple groups and their automorphism groups.
##
##  Each entry in the result list has the following components.
##  \beginitems
##  group &
##     {\LaTeX} format of <name>,
##
##  name &
##     <name>,
##
##  character &
##     the permutation character,
##
##  rank &
##     the rank of the character,
##
##  subgroup &
##     a string that is a name (in {\LaTeX} format) of the subgroup
##     from whose trivial character the permutation character is induced, and
##
##  ATLAS &
##     a string that describes (in {\LaTeX} format) the constituents of the
##     permutation character, relative to the simple group involved;
##     the format is described in the section~"ref:PermCharInfoRelative"
##     in the {\GAP} Reference Manual.
##  \enditems
##
DeclareGlobalFunction( "MultFreePermChars" );

InstallGlobalFunction( MultFreePermChars, function( name )
    local alternat,  # list of alternative names
          result,    # the result list
          tbl,       # character table with `Identifier' value `name'
          group,     # value of the `group' component of each result entry
          len,       # length of the list stored for `name'
          chars,     # list of the permutation characters for `name'
          dername,   # name of derived subgroup
          tblsimp,   # character table of the derived subgroup of `tbl'
          info,      # list of `ATLAS' values
          i,         # loop over the permutation characters
          entry,     # one entry in the record for `name'
          pos;       # position in `alternative'

    alternat:= [ [ "Fi24'" ], [ "F3+" ] ];

    result:= [];
    if IsBound( MULTFREEINFO.( name ) ) then
      if 9 < Length( name ) and name{ [ 1 .. 9 ] } = "Isoclinic" then
        tbl:= CharacterTableIsoclinic(
                  CharacterTable( name{ [ 11 .. Length( name )-1 ] } ) );
      else
        tbl:= CharacterTable( name );
      fi;
      group:= MULTFREEINFO.( name )[1];
      len:= Length( MULTFREEINFO.( name ) );
      chars:= List( MULTFREEINFO.( name ){ [ 2 .. len ] },
                    x -> Sum( Irr( tbl ){ x[1] } ) );
      if Number( name, c -> c = '.' ) = 2 then 
        if 9 < Length( name ) and name{ [ 1 .. 9 ] } = "Isoclinic" then
          dername:= name{ [ 11 .. Length( name )-1 ] };
        else
          dername:= name;
        fi; 
        i:= Position( dername, '.' );
        dername:= dername{ [ 1 .. Position( dername, '.', i )-1 ] };
        tblsimp:= CharacterTable( dername );
        if 9 < Length( name ) and name{ [ 1 .. 9 ] } = "Isoclinic" then
          StoreFusion( tblsimp, GetFusionMap( tblsimp,
              CharacterTable( name{ [ 11 .. Length( name )-1 ] } ) ), tbl );
        fi;
        info:= PermCharInfoRelative( tblsimp, tbl, chars ).ATLAS;
      elif '.' in name then 
        dername:= name{ [ 1 .. Position( name, '.' )-1 ] };
        if Int( dername ) = fail then
          tblsimp:= CharacterTable( dername );
          info:= PermCharInfoRelative( tblsimp, tbl, chars ).ATLAS;
        else
          info:= PermCharInfo( tbl, chars ).ATLAS;
        fi;
      else
        info:= PermCharInfo( tbl, chars ).ATLAS;
      fi;
      for i in [ 2 .. len ] do
        entry:= MULTFREEINFO.( name )[i];
        Add( result, rec( group     := group,
                          name      := name,
                          character := chars[ i-1 ],
                          rank      := Length( entry[1] ),
                          subgroup  := entry[2],
                          ATLAS     := info[ i-1 ]             ) );
      od;
    elif name = "all" then
      for name in RecNames( MULTFREEINFO ) do
        Append( result, MultFreePermChars( name ) );
      od;
    else
      pos:= Position( alternat[1], name );
      if pos = fail then
        Error( "<name> must be the name of a ",
               "(cyclic or bicyclic extension of a)\n",
               "sporadic simple group, or the string \"all\"" );
      else
        return MultFreePermChars( alternat[2][ pos ] );
      fi;
    fi;
    return result;
end );


#############################################################################
##
#E

