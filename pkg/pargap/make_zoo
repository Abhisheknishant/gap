#!/usr/bin/env perl

#A  Greg Gamble ... based in part on Frank Lübeck's packpack
## 
##  Usage: make_zoo
##
##  Uses perl and zoo to create just the <pname>-<version>.zoo
##  and copies the README to README.<pname> (both are placed in
##  the pkg directory).
##

#set values of <pname> and <version>
$pname = "pargap";
$version = `cat VERSION`;
chomp $version;

#remove files created during installation
system( "make distclean" );

#remove old .zoo file
system( "rm -f ../$pname-$version.zoo" );

#copy README in pkg directory 
system( "cp -f README ../README.$pname" );

### Create new .zoo file in pkg directory ###################################
chdir "..";

# substrings (mainly suffixes) that determine files we want to exclude
$prune = "[._]cvs|[.]bbl|[.]aux|[.]toc|[.][ib]lg|[.]log|[.]lab|[.]ind|[.]idx".
         "|zoo|make_|[.]sw[op]|[.-]bak|~|[.][#]".
         "|answers.tex|[.]orig|TODO.CHANGES|pargap.tex|-old";

# Create the .zoo file
system( "find $pname -path '*/CVS' -prune -o -print | egrep -v '$prune' |".
        "zoo ahI $pname-$version.zoo" );

@files = `find $pname -path '*/CVS' -prune -o -print | egrep -v '$prune'`;
# Mark some files as text files
for $file ( @files ) {
  chomp $file;
  if ($file =~ /[.](txt|g(|[id])|htm(|l)|sh|in|[ch]|xml|tex|bib|six|tst|mst)$/ ||
      $file =~ /(VERSION|README|CONTENTS|COPYING|Makefile|configure)/ ||
      $file =~ /(BUGS|TODO|HACKS|TESTS|INTERNALS|procgroup|thwap)/) {
    system( "(echo '!TEXT!'; echo '/END') | zoo c $pname-$version.zoo $file" );
  }
}
