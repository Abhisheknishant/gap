#############################################################################
##  
#W  TODO.laguna.             The LAGUNA package                  Viktor Bovdi
#W                                                        Alexander Konovalov
#W                                                         Richard Rossmanith
#W                                                            Csaba Schneider
##
#H  $Id: TODO.laguna,v 1.29 2005/05/28 12:54:11 alexk Exp $
##
#############################################################################

  
                      GAP 4 PACKAGE LAGUNA TO-DO LIST

1) for the nearest version:

- write documentation for:
  - AugmentationIdealPowerFactorGroup
  - SandlingFactorGroup( <G> )
  - JenningsFactors( <G> )
  - NumberOfConjugacyClassesPPowers( <G> )
  - ClassSumNumbers( <G> )
  - QuillenSeries( <G> )
  - RoggenkampParameter( <G> )
  - RoggenkampParameterForNormalSubset( <G>, <S> )
  - KernelSize( FG, [n,m,k] )
  - for tools for manipulation with the databases of MIP invariants:
    - PrintMIPInvariants( <G> )
    - PrintMIPInvariantsTable(<l>, <filename>)
    - MIPInvariantsRecord( <G> ) 
    - MIPInvariantsLibrary( <n> ) 
    - MIPInvariantsLibraryClassification( <invlib>, <mode> )
    - KernelSizeTest( FG, FH )
    - JenningsLieAlgebraTest( FG, FH )
    - MIPSplittingByKernelSize( <list>, <no>, <mode> )
    - MIPSplittingByJenningsLieAlgebra( <list> )
    - MIPSplittingReport( <list> )

- add functionality for liftings constraction (currenly included 
  in tst.g, AK)

2) Some notes to keep in mind for future releases:

- To have documented also internal functions NormalizedUnitCF 
  and NormalizedUnitCFmod

- Fast tests for IsSolvableUnitgroup(KG) and IsNilpotentUnitGroup(KG) 
  without the calculation of the unit group itself (could be interesting 
  for non-PModularGroupAlgebras) and using them for fast methods for 
  IsNilpotent and IsSolvable for their unit groups

- Would it be sensible to have a function ModularGroupAlgebra(G) 
  and ModularGroupAlgebra(G,p) if G is not a p-group for their 
  faster construction ?

- Dealing with Engel properties of Lie algebras

- Improve algorithm for NormalizedUnitCF to avoid linear algebra
  in the WHOLE augmentation ideal (working modulo I^k)

- Improve UnitarySubgroup (at least for the abelian case, where 
  the suitable description of the set of generators is known)

- Implement Pcgs composed of Normalized Units like Pcgs of 
  permutations (for a case if this helps)
  
- May we hide the difference between two representations of the unit
  group, working in pc-representation and displaying results in the
  natural form (may require another presentation for units)?   
  
- Add test files  

- Add functionality for integral group rings

- Computations with class sums, following Harald Meyer's PhD thesis

- In 3.3.1 the method for LieAlgebra was restricted to group algebras.
  We can allow selection between standard GAP method for LieAlgebra 
  and the method from LAGUNA.