#############################################################################
##
#W  strctcns.gd            GAP 4 package `genus'                Thomas Breuer
##
#H  @(#)$Id: strctcns.gd,v 1.4 2002/05/24 15:06:47 gap Exp $
##
#Y  Copyright (C)  2001,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
##
##  functions to compute structure constants and related numbers
##
#1
##  A *generalized class structure* of a finite group $G$ is a vector
##  $L = (L_1, L_2, \ldots, L_r)$, where each $L_i$ is a union of conjugacy
##  classes of $G$ such that all elements in $L_i$ have the same order.
##
##  We represent $L$ as list $[ l_1, l_2, \ldots, l_r ]$ where $l_i$
##  is the list of positions of the conjugacy classes that form $L_i$.
##  If $L_i$ is a single conjugacy class then $l_i$ may be also its position
##  instead of the list containing it.
##
#T  For example,
#T  ....
##
Revision.( "genus/gap/strctcns_gd" ) :=
    "@(#)$Id: strctcns.gd,v 1.4 2002/05/24 15:06:47 gap Exp $";


#############################################################################
##
#F  CardinalityOfHom( <L>, <g>, <tbl> )
##
##  Let <tbl> be the ordinary character table of the finite group $G$, say,
##  $<L> = (L_1, L_2, \ldots, L_r)$ be a generalized class structure of $G$,
##  <g> a nonnegative integer,
##  and $\Gamma$ be a group with signature $(<g>, m_1, m_2, \ldots, m_r)$,
##  where $m_i$ is the order of elements in $L_i$.
##  
##  `CardinalityOfHom' returns the number $|\Hom_{<L>}( \Gamma, G )|$
##  of those homomorphisms from $\Gamma$ to $G$ with the property that
##  the for $1 \leq i \leq r$, $i$-th elliptic generator of $\Gamma$
##  (see~"...") is mapped to an element in $L_i$.
##
##  This number can be computed using the formula
##  $$
##  |G|^{2 <g> -1} \sum_{\chi\in\Irr(G)} \chi(1)^{2 - 2 <g> - r}
##         \prod_{i=1}^r \sum_{\sigma_i\in L_i} \chi(\sigma_i)
##  $$
##  (see Theorem~3 in~\cite{Jon95} and Theorem~14.1 in~\cite{Bre00}).
##
DeclareGlobalFunction( "CardinalityOfHom" );


#############################################################################
##
#F  SigmaBar( <tbl>, <classes> )
##
##  Let <classes> be a list of positions $[ i_1, i_2, \ldots, i_r ]$
##  of conjugacy classes of the character table <tbl>.
##  'SigmaBar' returns the number of tuples
##  $(x_1, x_2, \ldots, x_r)$ with $x_1 x_2 \cdots x_r = 1$ and such that
##  $x_k$ lies in the $i_k$-th conjugacy class $C_k$ of <tbl>.
##
##  With $C = (C_1, C_2, \ldots, C_r)$, this is the number
##  $\overline{Sigma}(C)$ as defined on p.~115 in~\cite{Mat87}.
##
DeclareGlobalFunction( "SigmaBar" );


#############################################################################
##
#F  NormalizedStructureConstant( <tbl>, <list> )
##
##  is the number $n(C)$ as defined on p. 115 in~\cite{Mat87}.
##
##  If $\overline{\Sigma}(C)$ denotes the structure constant then
##  we have $n(C) = \frac{|Z(G)|}{|G|} \overline{\Sigma}(C)$. 
##
DeclareGlobalFunction( "NormalizedStructureConstant" );


#############################################################################
##
#F  NongenerationByScottCriterion( <tbl>, <chi>, <C> )
#F  NongenerationByScottCriterion( <tbl>, <C> )
#F  NongenerationByScottCriterion( <chi>, <C> )
##
##  Let <tbl> be the character table of a finite group $G$, say,
##  and $<C> = [ i_1, i_2, \ldots, i_r ]$ a list of positions
##  of conjugacy classes of <tbl>.
##
##  If $G$ can be generated by elements $g_j$, $1 \leq j \leq r$,
##  such that $g_j$ lies in the $i_j$-th conjugacy class
##  and $\prod_{j=1}^r g_j$ is the identity element in $G$ then for each
##  $G$-module $V$ the inequality
##  $\sum_{j=1}^r v( g_j, V ) \geq v( G, V ) + v( G, V^{\ast} )$ holds,
##  where $v( X, V ) = \dim( V ) - \dim( Fix_X( V ) )$.
##  (This is proved in~\cite{Sco77}, see also Theorem~15.9 in~\cite{Bre00}.)
##
##  Thus *non-generation* of $G$ by elements in the given classes is proved
##  if the inequality does not hold for a module $V$.
##
##  `NongenerationByScottCriterion' checks the inequality for a module $V$
##  with character <chi>, and returns `true' if non-generation can be proved,
##  and `false' otherwise.
##
##  If no character <chi> is given then the criterion is applied to all
##  irreducible characters <chi> of <tbl>.
##  If no character table <tbl> is given then <chi> must be a class function
##  object
##  (see Chapter~"ref:Class Functions" in the {\GAP} Reference Manual).
##
##  <tbl> may be a Brauer character table.
##  In this case, the implementation is not valid for arbitrary characters
##  because it assumes that $v( G, V ) = v( G, V^{\ast} )$ holds.
##  This is true for example if <chi> is irreducible;
##  if <chi> is not given then the criterion is applied to all
##  irreducible characters <chi> of <tbl>.
##  Note that only vectors <C> describing $p$-regular classes can be checked
##  for a $p$-modular Brauer table,
##  and that the positions in <C> refer to the class positions in <tbl> not
##  in the ordinary table, 
##
DeclareGlobalFunction( "NongenerationByScottCriterion" );


#############################################################################
##
#F  EichlerCharacter( <tbl>, <g0>, <classes> )
##
##  Let <tbl> be the ordinary character table of a group $G$, say,
##  and <classes> be a list $[ i_1, i_2, \ldots, i_r ]$ of positive integers
##  denoting positions of conjugacy classes of <tbl>.
##
##  Let $m_j$ be the order of elements in the class $i_j$.
##  Furthermore, let
##  $g = 1 - |G| +
##       \frac{|G|}{2} \sum_{j=1}^r \left( 1 - \frac{1}{m_j} \right)$
##  such that $g \geq 2$.
##
##  Suppose that <classes> describes an epimorphism
##  $\Phi \colon \Gamma \rightarrow G$ where $\Gamma$ is a group with
##  presentation $\langle c_1, c_2, \ldots, c_r |
##                        c_j^{m_j}, \prod_{j=1}^r c_j \rangle$.
##  Then $G$ is isomorphic to a group of automorphisms of a compact
##  Riemann surface $X$ of genus $g$, and the returned character is the
##  character of the natural action of $G$ on the space of holomorphic
##  abelian differentials on $X$.
##
#T how do the values of this character look like?
##
DeclareGlobalFunction( "EichlerCharacter" );

#T allow also EichlerCharacter( hom )
#T and EichlerCharacter( ..., q ) for action on higher differentials

#T (use clever ideas for class identification?)

#T and put the Eichler related functions together!!


#############################################################################
##
#E

