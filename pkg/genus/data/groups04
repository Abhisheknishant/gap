#############################################################################
##
#W  groups04.g             GAP 4 package `genus'                Thomas Breuer
##
#H  @(#)$Id: groups04,v 1.1 2002/05/24 15:02:19 gap Exp $
##
#Y  Copyright (C)  2001,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
Revision.( "pkg/genus/groups04_g" ) :=
    "@(#)$Id: groups04,v 1.1 2002/05/24 15:02:19 gap Exp $";

GROU(4,2,[ 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ],[ 2, 1 ]);
GROU(4,3,[ 0, 3, 3, 3, 3, 3, 3 ],[ 3, 1 ]);
GROU(4,4,[ 0, 2, 4, 4, 4, 4 ],[ 4, 1 ]);
GROU(4,4,[ 0, 2, 2, 2, 2, 4, 4 ],[ 4, 1 ]);
GROU(4,4,[ 0, 2, 2, 2, 2, 2, 2, 2 ],[ 4, 2 ]);
GROU(4,5,[ 0, 5, 5, 5, 5 ],[ 5, 1 ]);
GROU(4,6,[ 0, 3, 3, 6, 6 ],[ 6, 2 ]);
GROU(4,6,[ 0, 2, 6, 6, 6 ],[ 6, 2 ]);
GROU(4,6,[ 0, 2, 2, 3, 3, 3 ],[ 6, 1 ]);
GROU(4,6,[ 0, 2, 2, 3, 3, 3 ],[ 6, 2 ]);
GROU(4,6,[ 0, 2, 2, 2, 3, 6 ],[ 6, 2 ]);
GROU(4,6,[ 0, 2, 2, 2, 2, 2, 2 ],[ 6, 1 ]);
GROU(4,8,[ 0, 2, 4, 4, 4 ],[ 8, 4 ]);
GROU(4,8,[ 0, 2, 2, 8, 8 ],[ 8, 1 ]);
GROU(4,8,[ 0, 2, 2, 2, 2, 4 ],[ 8, 3 ]);
GROU(4,9,[ 0, 9, 9, 9 ],[ 9, 1 ]);
GROU(4,9,[ 0, 3, 3, 3, 3 ],[ 9, 2 ]);
GROU(4,10,[ 0, 5, 10, 10 ],[ 10, 2 ]);
GROU(4,10,[ 0, 2, 2, 5, 5 ],[ 10, 1 ]);
GROU(4,10,[ 0, 2, 2, 5, 5 ],[ 10, 2 ]);
GROU(4,12,[ 0, 6, 6, 6 ],[ 12, 5 ]);
GROU(4,12,[ 0, 4, 6, 12 ],[ 12, 2 ]);
GROU(4,12,[ 0, 3, 12, 12 ],[ 12, 2 ]);
GROU(4,12,[ 0, 2, 3, 3, 3 ],[ 12, 3 ]);
SIGN(4,12,[ 0, 2, 2, 4, 4 ],"all");
GROU(4,12,[ 0, 2, 2, 3, 6 ],[ 12, 4 ]);
GROU(4,12,[ 0, 2, 2, 3, 6 ],[ 12, 5 ]);
GROU(4,12,[ 0, 2, 2, 2, 2, 2 ],[ 12, 4 ]);
GROU(4,15,[ 0, 3, 5, 15 ],[ 15, 1 ]);
GROU(4,16,[ 0, 4, 4, 8 ],[ 16, 9 ]);
GROU(4,16,[ 0, 2, 16, 16 ],[ 16, 1 ]);
GROU(4,16,[ 0, 2, 2, 2, 8 ],[ 16, 7 ]);
GROU(4,18,[ 0, 3, 6, 6 ],[ 18, 3 ]);
GROU(4,18,[ 0, 3, 6, 6 ],[ 18, 5 ]);
GROU(4,18,[ 0, 2, 9, 18 ],[ 18, 2 ]);
GROU(4,18,[ 0, 2, 2, 3, 3 ],[ 18, 3 ]);
GROU(4,18,[ 0, 2, 2, 3, 3 ],[ 18, 4 ]);
GROU(4,20,[ 0, 4, 4, 5 ],[ 20, 1 ]);
GROU(4,20,[ 0, 4, 4, 5 ],[ 20, 3 ]);
GROU(4,20,[ 0, 2, 10, 10 ],[ 20, 5 ]);
GROU(4,20,[ 0, 2, 2, 2, 5 ],[ 20, 4 ]);
GROU(4,24,[ 0, 3, 4, 6 ],[ 24, 3 ]);
GROU(4,24,[ 0, 2, 6, 12 ],[ 24, 10 ]);
GROU(4,24,[ 0, 2, 2, 2, 4 ],[ 24, 12 ]);
SIGN(4,27,[ 0, 3, 3, 9 ],"all");
GROU(4,32,[ 0, 2, 4, 16 ],[ 32, 19 ]);
GROU(4,36,[ 0, 3, 4, 4 ],[ 36, 9 ]);
GROU(4,36,[ 0, 3, 3, 6 ],[ 36, 11 ]);
GROU(4,36,[ 0, 2, 6, 6 ],[ 36, 10 ]);
GROU(4,36,[ 0, 2, 6, 6 ],[ 36, 12 ]);
GROU(4,36,[ 0, 2, 2, 2, 3 ],[ 36, 10 ]);
GROU(4,40,[ 0, 2, 4, 10 ],[ 40, 8 ]);
SIGN(4,54,[ 0, 2, 3, 18 ],"all");
GROU(4,60,[ 0, 2, 5, 5 ],[ 60, 5 ]);
SIGN(4,60,[ 0, 2, 3, 15 ],"nonsolvable");
GROU(4,72,[ 0, 2, 4, 6 ],[ 72, 40 ]);
GROU(4,72,[ 0, 2, 3, 12 ],[ 72, 42 ]);
SIGN(4,108,[ 0, 2, 3, 9 ],"all");
GROU(4,120,[ 0, 2, 4, 5 ],[ 120, 34 ]);
GROU(4,2,[ 1, 2, 2, 2, 2, 2, 2 ],[ 2, 1 ]);
GROU(4,3,[ 1, 3, 3, 3 ],[ 3, 1 ]);
GROU(4,4,[ 1, 4, 4 ],[ 4, 1 ]);
GROU(4,4,[ 1, 2, 2, 2 ],[ 4, 2 ]);
GROU(4,6,[ 1, 2, 2 ],[ 6, 1 ]);
GROU(4,6,[ 1, 2, 2 ],[ 6, 2 ]);
GROU(4,12,[ 1, 2 ],[ 12, 3 ]);
GROU(4,2,[ 2, 2, 2 ],[ 2, 1 ]);
GROU(4,3,[ 2 ],[ 3, 1 ]);
GROU(4,1,[ 4 ],[ 1, 1 ]);

RUNTIME( Unknown() );

#############################################################################
##
#E

