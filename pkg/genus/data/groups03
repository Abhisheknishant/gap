#############################################################################
##
#W  groups03.g             GAP 4 package `genus'                Thomas Breuer
##
#H  @(#)$Id: groups03,v 1.1 2002/05/24 15:02:19 gap Exp $
##
#Y  Copyright (C)  2001,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
Revision.( "pkg/genus/groups03_g" ) :=
    "@(#)$Id: groups03,v 1.1 2002/05/24 15:02:19 gap Exp $";

GROU(3,2,[ 0, 2, 2, 2, 2, 2, 2, 2, 2 ],[ 2, 1 ]);
GROU(3,3,[ 0, 3, 3, 3, 3, 3 ],[ 3, 1 ]);
GROU(3,4,[ 0, 4, 4, 4, 4 ],[ 4, 1 ]);
GROU(3,4,[ 0, 2, 2, 2, 4, 4 ],[ 4, 1 ]);
GROU(3,4,[ 0, 2, 2, 2, 2, 2, 2 ],[ 4, 2 ]);
GROU(3,6,[ 0, 2, 3, 3, 6 ],[ 6, 2 ]);
GROU(3,6,[ 0, 2, 2, 6, 6 ],[ 6, 2 ]);
GROU(3,6,[ 0, 2, 2, 2, 2, 3 ],[ 6, 1 ]);
GROU(3,7,[ 0, 7, 7, 7 ],[ 7, 1 ]);
GROU(3,8,[ 0, 4, 8, 8 ],[ 8, 1 ]);
GROU(3,8,[ 0, 2, 2, 4, 4 ],[ 8, 2 ]);
GROU(3,8,[ 0, 2, 2, 4, 4 ],[ 8, 3 ]);
GROU(3,8,[ 0, 2, 2, 2, 2, 2 ],[ 8, 3 ]);
GROU(3,8,[ 0, 2, 2, 2, 2, 2 ],[ 8, 5 ]);
GROU(3,9,[ 0, 3, 9, 9 ],[ 9, 1 ]);
GROU(3,12,[ 0, 4, 4, 6 ],[ 12, 1 ]);
GROU(3,12,[ 0, 3, 4, 12 ],[ 12, 2 ]);
GROU(3,12,[ 0, 2, 12, 12 ],[ 12, 2 ]);
GROU(3,12,[ 0, 2, 2, 3, 3 ],[ 12, 3 ]);
GROU(3,12,[ 0, 2, 2, 2, 6 ],[ 12, 4 ]);
GROU(3,14,[ 0, 2, 7, 14 ],[ 14, 2 ]);
GROU(3,16,[ 0, 4, 4, 4 ],[ 16, 2 ]);
GROU(3,16,[ 0, 4, 4, 4 ],[ 16, 4 ]);
GROU(3,16,[ 0, 2, 8, 8 ],[ 16, 5 ]);
GROU(3,16,[ 0, 2, 8, 8 ],[ 16, 6 ]);
GROU(3,16,[ 0, 2, 2, 2, 4 ],[ 16, 11 ]);
GROU(3,16,[ 0, 2, 2, 2, 4 ],[ 16, 13 ]);
SIGN(3,18,[ 0, 2, 6, 9 ],"all");
GROU(3,21,[ 0, 3, 3, 7 ],[ 21, 1 ]);
GROU(3,24,[ 0, 3, 4, 4 ],[ 24, 12 ]);
GROU(3,24,[ 0, 3, 3, 6 ],[ 24, 3 ]);
GROU(3,24,[ 0, 2, 6, 6 ],[ 24, 13 ]);
GROU(3,24,[ 0, 2, 4, 12 ],[ 24, 5 ]);
GROU(3,24,[ 0, 2, 2, 2, 3 ],[ 24, 12 ]);
GROU(3,32,[ 0, 2, 4, 8 ],[ 32, 9 ]);
GROU(3,32,[ 0, 2, 4, 8 ],[ 32, 11 ]);
GROU(3,48,[ 0, 3, 3, 4 ],[ 48, 3 ]);
GROU(3,48,[ 0, 2, 4, 6 ],[ 48, 48 ]);
GROU(3,48,[ 0, 2, 3, 12 ],[ 48, 33 ]);
GROU(3,96,[ 0, 2, 3, 8 ],[ 96, 64 ]);
GROU(3,168,[ 0, 2, 3, 7 ],[ 168, 42 ]);
GROU(3,2,[ 1, 2, 2, 2, 2 ],[ 2, 1 ]);
GROU(3,3,[ 1, 3, 3 ],[ 3, 1 ]);
GROU(3,4,[ 1, 2, 2 ],[ 4, 1 ]);
GROU(3,4,[ 1, 2, 2 ],[ 4, 2 ]);
GROU(3,6,[ 1, 3 ],[ 6, 1 ]);
GROU(3,8,[ 1, 2 ],[ 8, 3 ]);
GROU(3,8,[ 1, 2 ],[ 8, 4 ]);
GROU(3,2,[ 2 ],[ 2, 1 ]);
GROU(3,1,[ 3 ],[ 1, 1 ]);

RUNTIME( Unknown() );

#############################################################################
##
#E

